"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2064],{23881:function(n,e,t){t.d(e,{s:function(){return i},v:function(){return p}});var r,i,a=t(37708),u=t(95059),o=t.n(u);(r=i||(i={})).NOT_FOUND="NOT_FOUND",r.DELETE_CARD_FORBIDDEN="DELETE_CARD_FORBIDDEN",r.PAYMENT_METHODS_DUPLICATES_LIMIT="PAYMENT_METHODS_DUPLICATES_LIMIT",r.PAYMENT_METHOD_TYPE_IS_NOT_SUPPORTED="PAYMENT_METHOD_TYPE_IS_NOT_SUPPORTED",r.PAYMENT_METHOD_HAS_UNPAID_TRANSACTIONS="PAYMENT_METHOD_HAS_UNPAID_TRANSACTIONS";let s={DELETE_CARD_FORBIDDEN:"There is an active subscription in your account. Unsubscribe first to be able to delete payment method.",PAYMENT_METHOD_TYPE_IS_NOT_SUPPORTED:"This payment method is not supported.",PAYMENT_METHOD_HAS_UNPAID_TRANSACTIONS:"There is an outstanding balance on this payment method. Please settle the balance before adding it to your account.",PAYMENT_METHODS_DUPLICATES_LIMIT:"This payment method is already in use by another account. If you own that account, please log in with that username."},l=(n,e)=>{var t,r,i,a,u,o;let l=s[null===(t=n.extensions)||void 0===t?void 0:t.code];return e?l:null!==(o=null!==(u=null!=l?l:n.message)&&void 0!==u?u:null===(r=n.extensions)||void 0===r?void 0:r.internalErrorMessage)&&void 0!==o?o:null===(a=n.extensions)||void 0===a?void 0:null===(i=a.originalError)||void 0===i?void 0:i.message},c=(n,e)=>n.response.errors.map(n=>l(n,e)).filter(n=>!!n),p=function(n){let e=!(arguments.length>1)||void 0===arguments[1]||arguments[1],t=function(n){let e=null==n?void 0:n.response;return o()(null==e?void 0:e.errors)&&e.errors.length>0&&e.errors.every(n=>n instanceof a.__||"message"in n&&"extensions"in n)}(n)&&c(n,e);return t&&t.length>0?t.join(" | "):void 0}},60579:function(n,e,t){t.d(e,{k:function(){return r.k}});var r=t(99729)},99729:function(n,e,t){t.d(e,{C:function(){return i},k:function(){return r}});let r={},i=n=>{Object.assign(r,n)}},23600:function(n,e,t){t.d(e,{P:function(){return a},U:function(){return u}});var r=t(23881),i=t(67222);let a={nextRedirect:t.n(i)(),handleGqlError:function(n){var e,t;null===(t=n.response)||void 0===t||null===(e=t.errors)||void 0===e||e.forEach(n=>{var e,t;if((null===(e=n.extensions)||void 0===e?void 0:e.code)===r.s.NOT_FOUND){let e="".concat(null===(t=n.extensions)||void 0===t?void 0:t.code),r=n.message;return this.nextRedirect("/server-error?code=".concat(e).concat(r?"&message=".concat(r):""))}})}},u=n=>{a.nextRedirect=n}},32064:function(n,e,t){let r;t.d(e,{D:function(){return oQ},p:function(){return oH}});var i=t(56093),a=t(96304),u=t(3045);function o(){let n=(0,i._)(["\n  fragment EndpointInfo on Endpoint {\n    id\n    isGraphQL\n    route\n    method\n    name\n    description\n    apiversion\n    group\n    index\n  }\n"]);return o=function(){return n},n}function s(){let n=(0,i._)(["\n  fragment SecurityInfo on BaseAuthentication {\n    apiVersionId\n    name\n    description\n    securityType\n    requirements {\n      id\n      scope\n    }\n    ... on HttpAuthentication {\n      scheme\n    }\n    ... on ApiKeyAuthentication {\n      authParam {\n        name\n        description\n      }\n      in\n    }\n    ... on Oauth2Authentication {\n      accessTokenUrl\n      authorizationUrl\n      grantType\n      separator\n      clientSecretRequired\n      clientAuthentication\n      handleOauthTokenAtFrontend\n      scopes {\n        name\n        description\n      }\n      extraMetadata {\n        pkceEnabled\n        codeChallengeMethod\n        customOAuth2AuthPrefix\n        JWTProfile\n      }\n    }\n  }\n"]);return s=function(){return n},n}function l(){let n=(0,i._)(["\n  fragment ResponsePayloadInfo on ResponsePayload {\n    id\n    name\n    format\n    body\n    headers\n    description\n    type\n    statusCode\n    apiendpoint\n    examples\n    schema\n  }\n"]);return l=function(){return n},n}function c(){let n=(0,i._)(["\n  fragment RequestPayloadInfo on RequestPayload {\n    id\n    name\n    format\n    body\n    description\n    type\n    statusCode\n    apiendpoint\n    examples\n    schema\n  }\n"]);return c=function(){return n},n}function p(){let n=(0,i._)(["\n  fragment FullEndpointInfo on Endpoint {\n    id\n    index\n    createdAt\n    group\n    method\n    name\n    route\n    description\n    isGraphQL\n    security {\n      ...SecurityInfo\n    }\n    externalDocs {\n      description\n      url\n    }\n    graphQLSchema(withOverrides: true) {\n      schema\n    }\n    params {\n      parameters\n    }\n    responsePayloads {\n      ...ResponsePayloadInfo\n    }\n    requestPayloads {\n      ...RequestPayloadInfo\n    }\n  }\n  ","\n  ","\n  ","\n"]);return p=function(){return n},n}function d(){let n=(0,i._)(["\n  fragment AssetInfo on Asset {\n    id\n    filename\n    title\n    description\n    visible\n    fileSizeBytes\n    createdAt\n  }\n"]);return d=function(){return n},n}function m(){let n=(0,i._)(["\n  fragment EndpointGroupInfo on EndpointsGroup {\n    id\n    name\n    index\n    description\n    externalDocs {\n      description\n      url\n    }\n  }\n"]);return m=function(){return n},n}function f(){let n=(0,i._)(["\n  fragment PublicDnsInfo on Publicdns {\n    proxyMode\n    address\n    current\n    id\n  }\n"]);return f=function(){return n},n}function g(){let n=(0,i._)(["\n  fragment ApiInfo on Api {\n    __typename\n    id\n    name\n    title\n    description\n    visibility\n    slugifiedName\n    pricing\n    updatedAt\n    category\n    thumbnail\n    isSavedApi\n    categoryId\n    apiCategory {\n      name\n      color\n    }\n    owner {\n      __typename\n      id\n      name\n      slugifiedName\n      type\n      thumbnail\n      parents {\n        id\n        name\n        slugifiedName\n        type\n        thumbnail\n      }\n    }\n    score {\n      avgServiceLevel\n      avgLatency\n      avgSuccessRate\n      popularityScore\n    }\n    version {\n      id\n      apiSubType\n      tags {\n        id\n        status\n        tagdefinition\n        type\n        value\n      }\n    }\n  }\n"]);return g=function(){return n},n}function y(){let n=(0,i._)(["\n  fragment CollectionSpotlightInfo on CollectionSpotlight {\n    __typename\n    id\n    title\n    description\n    spotlightUrl\n    thumbnailUrl\n  }\n"]);return y=function(){return n},n}function h(){let n=(0,i._)(["\n  fragment AuditUserFields on AuditUser {\n    id\n    type\n    mashapeId\n    thumbnail\n    name\n    slugifiedName\n    email\n  }\n"]);return h=function(){return n},n}function I(){let n=(0,i._)(["\n  fragment AuditNodeFields on AuditLogEntity {\n    id\n    action\n    eventName\n    user {\n      ...AuditUserFields\n    }\n    auditText\n    statusCode\n    highlight\n    createdAt\n  }\n  ","\n"]);return I=function(){return n},n}function A(){let n=(0,i._)(["\n  fragment AuditEdgeFields on AuditLogEntityEdge {\n    cursor\n    node {\n      ...AuditNodeFields\n    }\n  }\n  ","\n"]);return A=function(){return n},n}function v(){let n=(0,i._)(["\n  fragment PageInfoFields on PageInfo {\n    hasNextPage\n    hasPreviousPage\n    startCursor\n    endCursor\n  }\n"]);return v=function(){return n},n}function w(){let n=(0,i._)(["\n  fragment BillingPlanVersionInfo on BillingPlanVersion {\n    id\n    name\n    period\n    option\n    price\n    current\n    billingPlanId: billingplan\n    pricing\n    localePrice {\n      price\n      symbol\n    }\n    billinglimits {\n      id\n      period\n      amount\n      unlimited\n      overageprice\n      overageLocalePrice {\n        price\n        symbol\n      }\n      billingitem {\n        id\n        name\n        title\n        description\n        type\n        allEndpoints\n      }\n      item\n      limitType\n    }\n    enablebillingfeatures {\n      id\n      billingfeature\n      type\n      status\n      note\n      billingFeatureObject {\n        id\n        name\n        description\n      }\n    }\n    rateLimit {\n      enabled\n      unit\n      unitName\n      amount\n    }\n  }\n"]);return w=function(){return n},n}function P(){let n=(0,i._)(["\n  fragment BillingPlanInfo on BillingPlan {\n    id\n    name\n    recommended\n    visibility\n    allowedPlanDevelopers {\n      userId\n    }\n    shouldRequestApproval\n    requestApprovalQuestion\n    hidden\n    legalDocumentId\n    legalAccountId\n    version {\n      ...BillingPlanVersionInfo\n    }\n  }\n  ","\n"]);return P=function(){return n},n}function $(){let n=(0,i._)(["\n  fragment BillingItemApiEndpointFields on BillingItemApiEndpoint {\n    id\n    method\n    name\n    route\n    description\n  }\n"]);return $=function(){return n},n}function q(){let n=(0,i._)(["\n  fragment ConnectedAccountInfo on ConnectedAccount {\n    connectionStatus\n    externalAccountId\n  }\n"]);return q=function(){return n},n}function S(){let n=(0,i._)(["\n  fragment MinimalCardInfo on MinimalCard {\n    brand\n    last4\n    exp_month\n    exp_year\n    fingerprint\n    wallet {\n      type\n    }\n  }\n"]);return S=function(){return n},n}function C(){let n=(0,i._)(["\n  fragment UsBankAccountInfo on USBankAccount {\n    accountType\n    bankName\n    fingerprint\n    last4\n  }\n"]);return C=function(){return n},n}function R(){let n=(0,i._)(["\n  fragment PaymentMethodInfo on PaymentMethod {\n    id\n    type\n    default\n    card {\n      ...MinimalCardInfo\n    }\n    usBankAccount {\n      ...UsBankAccountInfo\n    }\n  }\n  ","\n  ","\n"]);return R=function(){return n},n}function b(){let n=(0,i._)(["\n  fragment UnverifiedPaymentMethodInfo on UnverifiedPaymentMethod {\n    id\n    verificationLink\n    usBankAccount {\n      ...UsBankAccountInfo\n    }\n  }\n  ","\n"]);return b=function(){return n},n}function _(){let n=(0,i._)(["\n  fragment BillingDetailsInfo on BillingDetails {\n    name\n    email\n    phone\n    address {\n      city\n      country\n      line1\n      line2\n      postal_code\n      state\n    }\n  }\n"]);return _=function(){return n},n}function T(){let n=(0,i._)(["\n  fragment InvoiceLineItemInfo on InvoiceLineItem {\n    amount\n    quantity\n    description\n  }\n"]);return T=function(){return n},n}function B(){let n=(0,i._)(["\n  fragment notification on NewNotification {\n    id\n    type\n    createdAt\n    isRead\n    title\n    body\n    callToAction\n    image\n    any\n  }\n"]);return B=function(){return n},n}function Z(){let n=(0,i._)(["\n  fragment Gateway on Gateway {\n    id\n    dns\n    type\n    status\n    version\n    isDefault\n    lastActive\n    serviceStatus\n  }\n"]);return Z=function(){return n},n}function E(){let n=(0,i._)(["\n  fragment ApplicationAuthorization on ApplicationAuthorization {\n    id\n    key\n    name\n    status\n    updatedAt\n    grantType\n    applicationId\n    authorizationType\n    authorizationValues\n    gateways {\n      ...Gateway\n    }\n  }\n  ","\n"]);return E=function(){return n},n}function U(){let n=(0,i._)(["\n  fragment Project on Project {\n    id\n    name\n    description\n    thumbnail\n    mashapeId\n    enableLimitsToAPIs\n  }\n"]);return U=function(){return n},n}function D(){let n=(0,i._)(["\n  fragment role on Role {\n    id\n    name\n    isDefault\n    roleLevel\n    isBasicRole\n    description\n  }\n"]);return D=function(){return n},n}function N(){let n=(0,i._)(["\n  fragment ApiAssociated on ApiCertificateAssociation {\n    apiVersion {\n      id\n      name\n      apiInstance {\n        id\n        name\n        slugifiedName\n        apiType\n      }\n    }\n  }\n"]);return N=function(){return n},n}function O(){let n=(0,i._)(["\n  fragment CertificateSubjectInfo on ApiCertificateSubjectInfo {\n    alternativeNames\n    commonName\n    countryName\n    stateOrProvinceName\n    localityName\n    organizationName\n    organizationalUnitName\n  }\n"]);return O=function(){return n},n}function V(){let n=(0,i._)(["\n  fragment CertificateIssuer on ApiCertificateIssuerInfo {\n    commonName\n  }\n"]);return V=function(){return n},n}function M(){let n=(0,i._)(["\n  fragment CertificateInfo on ApiCertificate {\n    id\n    alias\n    effectiveDate\n    expiry\n    serialNumber\n    publicKeySignatureAlgorithm\n    publicKeySizeInBits\n    signatureAlgorithm\n    updatedAt\n    createdAt\n    associatedApiVersionsCount\n    certificateDataAsPem\n    associations {\n      ...ApiAssociated\n    }\n    subject {\n      ...CertificateSubjectInfo\n    }\n    issuer {\n      ...CertificateIssuer\n    }\n  }\n  ","\n  ","\n  ","\n"]);return M=function(){return n},n}function k(){let n=(0,i._)(["\n  fragment SEOTag on SEOTag {\n    tag\n    innerBody\n    attributes {\n      key\n      value\n    }\n  }\n"]);return k=function(){return n},n}function L(){let n=(0,i._)(["\n  fragment seoData on SEO {\n    id\n    url\n    tags {\n      ...SEOTag\n    }\n  }\n  ","\n"]);return L=function(){return n},n}function F(){let n=(0,i._)(["\n  fragment userTeam on Team {\n    id\n    name\n    status\n    thumbnail\n    usersCount\n    description\n    isTeamMember\n    slugifiedName\n  }\n"]);return F=function(){return n},n}function z(){let n=(0,i._)(["\n  fragment organization on Organization {\n    id\n    name\n    slugifiedName\n    thumbnail\n    isOrganizationAdmin\n    paymentProvider\n    entity\n    billingAdditionalValues {\n      subscriptionId\n      total\n    }\n    billingInformation {\n      id\n      type\n      status\n      stripeId\n      billingStatus\n    }\n    teams {\n      ...userTeam\n    }\n  }\n  ","\n"]);return z=function(){return n},n}function W(){let n=(0,i._)(["\n  fragment activeUser on User {\n    name\n    id\n    mashapeId\n    email\n    username\n    entity\n    thumbnail\n    billingType\n    paymentProvider\n    organizations {\n      ...organization\n    }\n    corporateDomain {\n      domain\n      ignore\n    }\n  }\n  ","\n"]);return W=function(){return n},n}function x(){let n=(0,i._)(["\n  fragment teamUser on TeamUser {\n    id\n    name\n    role\n    email\n    status\n    username\n    thumbnail\n    teamsCount\n    inviteStatus\n    teams {\n      ...userTeam\n    }\n  }\n  ","\n"]);return x=function(){return n},n}function j(){let n=(0,i._)(["\n  fragment Workflow on Workflow {\n    id\n    topic\n    status\n    updatedAt\n    createdAt\n    workflowId\n    componentId\n    requesteeId\n    requestorId\n    workflowStatus\n    requesteeEmail\n    subComponentId\n    additionalData\n    requestorEmail\n    requesteeContextId\n    componentDisplayName\n    requestorContextId\n    requestorDisplayName\n    requesteeContextDisplayName\n    requestorContextDisplayName\n    requesteeDisplayName\n    api {\n      id\n      name\n      slugifiedName\n    }\n  }\n"]);return j=function(){return n},n}function G(){let n=(0,i._)(["\n  query apiTrafficAnalytics($where: AnalyticsStatsInput!) {\n    apiTrafficAnalytics(where: $where) {\n      date\n      requests\n      latency\n      errors\n    }\n  }\n"]);return G=function(){return n},n}function H(){let n=(0,i._)(["\n  query apiTrafficAnalyticsFacets($where: AnalyticsFacetsInput!) {\n    apiTrafficAnalyticsFacets(where: $where) {\n      consumers {\n        data {\n          consumer {\n            id\n            name\n            username\n            slugifiedName\n            thumbnail\n          }\n          requests\n        }\n        total\n      }\n      countryNames {\n        data {\n          country\n          requests\n        }\n        total\n      }\n      methods {\n        data {\n          method\n          requests\n        }\n        total\n      }\n      httpStatuses {\n        data {\n          status\n          requests\n        }\n        total\n      }\n      apiVersions {\n        data {\n          apiVersion {\n            id\n            name\n            apiInstance {\n              id\n              name\n            }\n          }\n          requests\n        }\n        total\n      }\n    }\n  }\n"]);return H=function(){return n},n}function Q(){let n=(0,i._)(["\n  query apiTrafficAnalyticsLogs(\n    $where: AnalyticsStatsLogsInput!\n    $orderBy: [AnalyticsStatsLogsSortingInput!]\n    $pagination: PaginationInput\n  ) {\n    apiTrafficAnalyticsLogs(where: $where, orderBy: $orderBy, pagination: $pagination) {\n      totalCount\n      nodes {\n        requestId\n        consumer {\n          name\n          username\n          slugifiedName\n          thumbnail\n          email\n        }\n        endpointRoute\n        endpointId\n        apiId\n        apiName\n        httpMethod\n        apiLatency\n        callTime\n        callTimeUTC\n        originCountryName\n        httpStatus\n        apiVersionName\n        isPayloadExist\n      }\n    }\n  }\n"]);return Q=function(){return n},n}function K(){let n=(0,i._)(["\n  query apiTrafficAnalyticsSummary($where: AnalyticsStatsInput!) {\n    apiTrafficAnalyticsSummary(where: $where) {\n      requests {\n        total\n        min\n        max\n        avg\n        rps\n      }\n      errors {\n        total\n        min\n        max\n        avg\n        median\n      }\n      latency {\n        min\n        max\n        avg\n        median\n      }\n    }\n  }\n"]);return K=function(){return n},n}function Y(){let n=(0,i._)(["\n  query consumerAnalytics($where: MetricsInput!) {\n    metrics(where: $where) {\n      apiCallVolumeConsumer {\n        currentPeriodValue\n        previousPeriodValue\n      }\n      totalApiCostConsumer {\n        currentPeriodValue\n        previousPeriodValue\n      }\n      totalActiveApiConsumer {\n        currentPeriodValue\n        previousPeriodValue\n      }\n      apiUsageDaysConsumer {\n        currentPeriodValue\n        previousPeriodValue\n      }\n      apiSuccessRateConsumer {\n        currentPeriodValue\n        previousPeriodValue\n      }\n    }\n  }\n"]);return Y=function(){return n},n}function J(){let n=(0,i._)(["\n  query consumerAnalyticsEngagements($where: MetricsInput!, $whereOverTime: MetricsOverTimeInput!) {\n    metrics(where: $where) {\n      totalActiveApiConsumer {\n        currentPeriodValue\n      }\n      totalSubscriptionsCountConsumer {\n        currentPeriodValue\n      }\n      applicationCountConsumer {\n        currentPeriodValue\n      }\n      totalActiveApiConsumerOverTime(where: $whereOverTime) {\n        date\n        value\n      }\n      totalSubscriptionsCountConsumerOverTime(where: $whereOverTime) {\n        date\n        value\n      }\n      applicationCountConsumerOverTime(where: $whereOverTime) {\n        date\n        value\n      }\n    }\n  }\n"]);return J=function(){return n},n}function X(){let n=(0,i._)(["\n  query consumerAnalyticsFinancial($where: MetricsInput!, $whereOverTime: MetricsOverTimeInput!) {\n    metrics(where: $where) {\n      totalApiCostConsumerOverTime(where: $whereOverTime) {\n        date\n        value\n      }\n      apiCallVolumeConsumerOverTime(where: $whereOverTime) {\n        date\n        value\n      }\n      overagesCostConsumerOverTime(where: $whereOverTime) {\n        date\n        value\n      }\n      paidApiCallsConsumerOverTime(where: $whereOverTime) {\n        date\n        value\n      }\n      totalApiCostConsumer {\n        currentPeriodValue\n      }\n      apiCallVolumeConsumer {\n        currentPeriodValue\n      }\n      overagesCostConsumer {\n        currentPeriodValue\n      }\n      paidApiCallsConsumer {\n        currentPeriodValue\n      }\n    }\n  }\n"]);return X=function(){return n},n}function nn(){let n=(0,i._)(["\n  query consumerAnalyticsHealth($where: MetricsInput!, $whereOverTime: MetricsOverTimeInput!) {\n    metrics(where: $where) {\n      apiErrorRateConsumer {\n        currentPeriodValue\n      }\n      apiErrorRateConsumerOverTime(where: $whereOverTime) {\n        date\n        value\n      }\n      apiAvgLatencyConsumer {\n        currentPeriodValue\n      }\n      apiAvgLatencyConsumerOverTime(where: $whereOverTime) {\n        date\n        value\n      }\n    }\n  }\n"]);return nn=function(){return n},n}function ne(){let n=(0,i._)(["\n  query getRequestLogPayload($requestId: ID, $apiId: String, $callTime: String!) {\n    getRequestLogPayload: logPayloadByRequestIdWithLoggingRestrictions(\n      requestId: $requestId\n      callTime: $callTime\n      apiId: $apiId\n    ) {\n      reqparams\n      reqheaders\n      resheaders\n      reqbody\n      resbody\n      saveRequestQueryParametersLogging\n      saveRequestHeadersLogging\n      saveResponseHeadersLogging\n      saveRequestBodyLogging\n      saveResponseBodyLogging\n      __typename\n    }\n  }\n"]);return ne=function(){return n},n}function nt(){let n=(0,i._)(["\n  query providerAnalyticsEngagements($where: MetricsInput!, $whereOverTime: MetricsOverTimeInput!) {\n    metrics(where: $where) {\n      totalFreeApiConsumption {\n        currentPeriodValue\n      }\n      totalFreeApiConsumptionOverTime(where: $whereOverTime) {\n        date\n        value\n      }\n      totalApiCreatedByProvider {\n        currentPeriodValue\n      }\n      totalApiCreatedByProviderOverTime(where: $whereOverTime) {\n        date\n        value\n      }\n    }\n  }\n"]);return nt=function(){return n},n}function nr(){let n=(0,i._)(["\n  query providerAnalyticsGrowth($where: MetricsInput!, $whereOverTime: MetricsOverTimeInput!) {\n    metrics(where: $where) {\n      totalApiRevenue {\n        currentPeriodValue\n      }\n      totalApiRevenueOverTime {\n        date\n        value\n      }\n      apiCallVolumeProvider {\n        currentPeriodValue\n      }\n      apiCallVolumeProviderOverTime(where: $whereOverTime) {\n        date\n        value\n      }\n      totalSubscriptionsCountProvider {\n        currentPeriodValue\n      }\n      totalSubscriptionsCountProviderOverTime(where: $whereOverTime) {\n        date\n        value\n      }\n      totalPaidSubscriptionsCountProvider {\n        currentPeriodValue\n      }\n      totalPaidSubscriptionsCountProviderOverTime(where: $whereOverTime) {\n        date\n        value\n      }\n      totalFreeSubscriptionsCountProvider {\n        currentPeriodValue\n      }\n      totalFreeSubscriptionsCountProviderOverTime(where: $whereOverTime) {\n        date\n        value\n      }\n    }\n  }\n"]);return nr=function(){return n},n}function ni(){let n=(0,i._)(["\n  query providerAnalyticsHealth($where: MetricsInput!, $whereOverTime: MetricsOverTimeInput!) {\n    metrics(where: $where) {\n      apiErrorRateProvider {\n        currentPeriodValue\n      }\n      apiErrorRateProviderOverTime(where: $whereOverTime) {\n        date\n        value\n      }\n      totalActiveApiProvider {\n        currentPeriodValue\n      }\n      totalActiveApiProviderOverTime(where: $whereOverTime) {\n        date\n        value\n      }\n    }\n  }\n"]);return ni=function(){return n},n}function na(){let n=(0,i._)(["\n  query providerAnalyticsMetrics($where: MetricsInput!) {\n    metrics(where: $where) {\n      apiCallVolumeProvider {\n        currentPeriodValue\n        previousPeriodValue\n      }\n      totalApiRevenue {\n        currentPeriodValue\n        previousPeriodValue\n      }\n      totalApiEstimatedRevenueByProvider {\n        currentPeriodValue\n        previousPeriodValue\n      }\n      apiErrorRateProvider {\n        currentPeriodValue\n        previousPeriodValue\n      }\n      pricePerThousandCallsByProvider {\n        currentPeriodValue\n        previousPeriodValue\n      }\n      totalApiCreatedByProvider {\n        currentPeriodValue\n        previousPeriodValue\n      }\n    }\n  }\n"]);return na=function(){return n},n}function nu(){let n=(0,i._)(["\n  query topByConsumer(\n    $where: TopMetricsInput!\n    $includeRevenue: Boolean!\n    $includeOtherMetrics: Boolean!\n  ) {\n    metrics {\n      topApiCalls: topApiCallsByConsumer(where: $where) {\n        name\n        value\n        metadata {\n          api {\n            id\n            name\n            thumbnail\n          }\n          provider {\n            id\n            slugifiedName\n            mashapeId\n          }\n        }\n      }\n      topApiErrorRate: topApiErrorRateByConsumer(where: $where) @include(if: $includeOtherMetrics) {\n        name\n        value\n        metadata {\n          api {\n            id\n            name\n            thumbnail\n          }\n          provider {\n            id\n            slugifiedName\n            mashapeId\n          }\n        }\n      }\n      topApiAvgLatency: topApiAvgLatencyByConsumer(where: $where)\n        @include(if: $includeOtherMetrics) {\n        name\n        value\n        metadata {\n          api {\n            id\n            name\n            thumbnail\n          }\n          provider {\n            id\n            slugifiedName\n            mashapeId\n          }\n        }\n      }\n      topConsumersCalls: topConsumersCallsByConsumer(where: $where) {\n        name\n        value\n        metadata {\n          consumer {\n            id\n            slugifiedName\n            mashapeId\n            thumbnail\n          }\n        }\n      }\n      topConsumersErrorRate: topConsumersErrorRateByConsumer(where: $where)\n        @include(if: $includeOtherMetrics) {\n        name\n        value\n        metadata {\n          consumer {\n            id\n            slugifiedName\n            mashapeId\n            thumbnail\n          }\n        }\n      }\n      topConsumersAvgLatency: topConsumersAvgLatencyByConsumer(where: $where)\n        @include(if: $includeOtherMetrics) {\n        name\n        value\n        metadata {\n          consumer {\n            id\n            slugifiedName\n            mashapeId\n            thumbnail\n          }\n        }\n      }\n      topApiRevenue: topApiSpendByConsumer(where: $where) @include(if: $includeRevenue) {\n        name\n        value\n        metadata {\n          api {\n            id\n            name\n            thumbnail\n          }\n          provider {\n            id\n            slugifiedName\n            mashapeId\n          }\n        }\n      }\n      topConsumersRevenue: topConsumersSpendByConsumer(where: $where)\n        @include(if: $includeRevenue) {\n        name\n        value\n        metadata {\n          consumer {\n            id\n            slugifiedName\n            mashapeId\n            thumbnail\n          }\n        }\n      }\n    }\n  }\n"]);return nu=function(){return n},n}function no(){let n=(0,i._)(["\n  query topByProvider(\n    $where: TopMetricsInput!\n    $includeRevenue: Boolean!\n    $includeOtherMetrics: Boolean!\n  ) {\n    metrics {\n      topApiCalls: topApiCallsByProvider(where: $where) {\n        name\n        value\n        metadata {\n          api {\n            id\n            name\n            thumbnail\n          }\n          provider {\n            id\n            slugifiedName\n            mashapeId\n          }\n        }\n      }\n      topApiErrorRate: topApiErrorRateByProvider(where: $where) @include(if: $includeOtherMetrics) {\n        name\n        value\n        metadata {\n          api {\n            id\n            name\n            thumbnail\n          }\n          provider {\n            id\n            slugifiedName\n            mashapeId\n          }\n        }\n      }\n      topApiAvgLatency: topApiAvgLatencyByProvider(where: $where)\n        @include(if: $includeOtherMetrics) {\n        name\n        value\n        metadata {\n          api {\n            id\n            name\n            thumbnail\n          }\n          provider {\n            id\n            slugifiedName\n            mashapeId\n          }\n        }\n      }\n      topConsumersCalls: topConsumersCallsByProvider(where: $where) {\n        name\n        value\n        metadata {\n          consumer {\n            id\n            slugifiedName\n            mashapeId\n            thumbnail\n          }\n        }\n      }\n      topConsumersErrorRate: topConsumersErrorRateByProvider(where: $where)\n        @include(if: $includeOtherMetrics) {\n        name\n        value\n        metadata {\n          consumer {\n            id\n            slugifiedName\n            mashapeId\n            thumbnail\n          }\n        }\n      }\n      topConsumersAvgLatency: topConsumersAvgLatencyByProvider(where: $where)\n        @include(if: $includeOtherMetrics) {\n        name\n        value\n        metadata {\n          consumer {\n            id\n            slugifiedName\n            mashapeId\n            thumbnail\n          }\n        }\n      }\n      topApiRevenue: topApiRevenueByProvider(where: $where) @include(if: $includeRevenue) {\n        name\n        value\n        metadata {\n          api {\n            id\n            name\n            thumbnail\n          }\n          provider {\n            id\n            slugifiedName\n            mashapeId\n          }\n        }\n      }\n      topConsumersRevenue: topConsumersRevenueByProvider(where: $where)\n        @include(if: $includeRevenue) {\n        name\n        value\n        metadata {\n          consumer {\n            id\n            slugifiedName\n            mashapeId\n            thumbnail\n          }\n        }\n      }\n    }\n  }\n"]);return no=function(){return n},n}function ns(){let n=(0,i._)(["\n  query topApiCallsByProvider($where: TopMetricsInput!) {\n    metrics {\n      topQuery: topApiCallsByProvider(where: $where) {\n        name\n        value\n        metadata {\n          api {\n            id\n            name\n            thumbnail\n          }\n          provider {\n            id\n            slugifiedName\n            mashapeId\n          }\n        }\n      }\n    }\n  }\n"]);return ns=function(){return n},n}function nl(){let n=(0,i._)(["\n  query topApiErrorRateByProvider($where: TopMetricsInput!) {\n    metrics {\n      topQuery: topApiErrorRateByProvider(where: $where) {\n        name\n        value\n        metadata {\n          api {\n            id\n            name\n            thumbnail\n          }\n          provider {\n            id\n            slugifiedName\n            mashapeId\n          }\n        }\n      }\n    }\n  }\n"]);return nl=function(){return n},n}function nc(){let n=(0,i._)(["\n  query topApiAvgLatencyByProvider($where: TopMetricsInput!) {\n    metrics {\n      topQuery: topApiAvgLatencyByProvider(where: $where) {\n        name\n        value\n        metadata {\n          api {\n            id\n            name\n            thumbnail\n          }\n          provider {\n            id\n            slugifiedName\n            mashapeId\n          }\n        }\n      }\n    }\n  }\n"]);return nc=function(){return n},n}function np(){let n=(0,i._)(["\n  query topConsumersCallsByProvider($where: TopMetricsInput!) {\n    metrics {\n      topQuery: topConsumersCallsByProvider(where: $where) {\n        name\n        value\n        metadata {\n          consumer {\n            id\n            slugifiedName\n            mashapeId\n            thumbnail\n          }\n        }\n      }\n    }\n  }\n"]);return np=function(){return n},n}function nd(){let n=(0,i._)(["\n  query topConsumersErrorRateByProvider($where: TopMetricsInput!) {\n    metrics {\n      topQuery: topConsumersErrorRateByProvider(where: $where) {\n        name\n        value\n        metadata {\n          consumer {\n            id\n            slugifiedName\n            mashapeId\n            thumbnail\n          }\n        }\n      }\n    }\n  }\n"]);return nd=function(){return n},n}function nm(){let n=(0,i._)(["\n  query topConsumersAvgLatencyByProvider($where: TopMetricsInput!) {\n    metrics {\n      topQuery: topConsumersAvgLatencyByProvider(where: $where) {\n        name\n        value\n        metadata {\n          consumer {\n            id\n            slugifiedName\n            mashapeId\n            thumbnail\n          }\n        }\n      }\n    }\n  }\n"]);return nm=function(){return n},n}function nf(){let n=(0,i._)(["\n  query topApiCallsByConsumer($where: TopMetricsInput!) {\n    metrics {\n      topQuery: topApiCallsByConsumer(where: $where) {\n        name\n        value\n        metadata {\n          api {\n            id\n            name\n            thumbnail\n          }\n          provider {\n            id\n            slugifiedName\n            mashapeId\n          }\n        }\n      }\n    }\n  }\n"]);return nf=function(){return n},n}function ng(){let n=(0,i._)(["\n  query topApiErrorRateByConsumer($where: TopMetricsInput!) {\n    metrics {\n      topQuery: topApiErrorRateByConsumer(where: $where) {\n        name\n        value\n        metadata {\n          api {\n            id\n            name\n            thumbnail\n          }\n          provider {\n            id\n            slugifiedName\n            mashapeId\n          }\n        }\n      }\n    }\n  }\n"]);return ng=function(){return n},n}function ny(){let n=(0,i._)(["\n  query topApiAvgLatencyByConsumer($where: TopMetricsInput!) {\n    metrics {\n      topQuery: topApiAvgLatencyByConsumer(where: $where) {\n        name\n        value\n        metadata {\n          api {\n            id\n            name\n            thumbnail\n          }\n          provider {\n            id\n            slugifiedName\n            mashapeId\n          }\n        }\n      }\n    }\n  }\n"]);return ny=function(){return n},n}function nh(){let n=(0,i._)(["\n  query topConsumersCallsByConsumer($where: TopMetricsInput!) {\n    metrics {\n      topQuery: topConsumersCallsByConsumer(where: $where) {\n        name\n        value\n        metadata {\n          consumer {\n            id\n            slugifiedName\n            mashapeId\n            thumbnail\n          }\n        }\n      }\n    }\n  }\n"]);return nh=function(){return n},n}function nI(){let n=(0,i._)(["\n  query topConsumersErrorRateByConsumer($where: TopMetricsInput!) {\n    metrics {\n      topQuery: topConsumersErrorRateByConsumer(where: $where) {\n        name\n        value\n        metadata {\n          consumer {\n            id\n            slugifiedName\n            mashapeId\n            thumbnail\n          }\n        }\n      }\n    }\n  }\n"]);return nI=function(){return n},n}function nA(){let n=(0,i._)(["\n  query topConsumersAvgLatencyByConsumer($where: TopMetricsInput!) {\n    metrics {\n      topQuery: topConsumersAvgLatencyByConsumer(where: $where) {\n        name\n        value\n        metadata {\n          consumer {\n            id\n            slugifiedName\n            mashapeId\n            thumbnail\n          }\n        }\n      }\n    }\n  }\n"]);return nA=function(){return n},n}function nv(){let n=(0,i._)(["\n  query topApiSpendByConsumer($where: TopMetricsInput!) {\n    metrics {\n      topQuery: topApiSpendByConsumer(where: $where) {\n        name\n        value\n        metadata {\n          api {\n            id\n            name\n            thumbnail\n          }\n          provider {\n            id\n            slugifiedName\n            mashapeId\n          }\n        }\n      }\n    }\n  }\n"]);return nv=function(){return n},n}function nw(){let n=(0,i._)(["\n  query topConsumersSpendByConsumer($where: TopMetricsInput!) {\n    metrics {\n      topQuery: topConsumersSpendByConsumer(where: $where) {\n        name\n        value\n        metadata {\n          consumer {\n            id\n            slugifiedName\n            mashapeId\n            thumbnail\n          }\n        }\n      }\n    }\n  }\n"]);return nw=function(){return n},n}function nP(){let n=(0,i._)(["\n  query topApiRevenueByProvider($where: TopMetricsInput!) {\n    metrics {\n      topQuery: topApiRevenueByProvider(where: $where) {\n        name\n        value\n        metadata {\n          api {\n            id\n            name\n            thumbnail\n          }\n          provider {\n            id\n            slugifiedName\n            mashapeId\n          }\n        }\n      }\n    }\n  }\n"]);return nP=function(){return n},n}function n$(){let n=(0,i._)(["\n  query topConsumersRevenueByProvider($where: TopMetricsInput!) {\n    metrics {\n      topQuery: topConsumersRevenueByProvider(where: $where) {\n        name\n        value\n        metadata {\n          consumer {\n            id\n            slugifiedName\n            mashapeId\n            thumbnail\n          }\n        }\n      }\n    }\n  }\n"]);return n$=function(){return n},n}function nq(){let n=(0,i._)(["\n  query getApiEndpoint($id: ID!) {\n    endpoint(id: $id) {\n      ...EndpointInfo\n    }\n  }\n  ","\n"]);return nq=function(){return n},n}function nS(){let n=(0,i._)(["\n  query getFullApiEndpoint($id: ID!) {\n    endpoint(id: $id) {\n      ...FullEndpointInfo\n    }\n  }\n  ","\n"]);return nS=function(){return n},n}function nC(){let n=(0,i._)(["\n  query getApiVersion($apiVersionId: ID!) {\n    apiVersion(apiVersionId: $apiVersionId) {\n      id\n      name\n      spec\n      current\n      versionStatus\n      apiVersionType\n      assets(visible: true) {\n        ...AssetInfo\n      }\n      endpoints(pagingArgs: { limit: -1 }) {\n        ...EndpointInfo\n      }\n      targetGroup {\n        targetUrls {\n          url\n        }\n      }\n      accessControl {\n        security {\n          ...SecurityInfo\n        }\n      }\n      groups {\n        ...EndpointGroupInfo\n      }\n      publicdns {\n        ...PublicDnsInfo\n      }\n    }\n  }\n  ","\n  ","\n  ","\n  ","\n  ","\n"]);return nC=function(){return n},n}function nR(){let n=(0,i._)(["\n  mutation favoriteApi($productId: String!, $status: Int!) {\n    saveUserApi(saveUserApi: { apiId: $productId, status: $status }) {\n      id\n      status\n      apiId\n    }\n  }\n"]);return nR=function(){return n},n}function nb(){let n=(0,i._)(["\n  query getApiBySlugAndOwner(\n    $apiOwnerSlug: String\n    $apiSlug: String\n    $withEndpoints: Boolean! = false\n  ) {\n    apiBySlugifiedNameAndOwnerName(slugifiedName: $apiSlug, ownerName: $apiOwnerSlug) {\n      ...ApiInfo\n      createdAt\n      status\n      longDescription\n      apiType\n      allowedContext\n      isCtxSubscriber\n      quality {\n        score\n      }\n      owner {\n        id\n        name\n        slugifiedName\n        type\n        thumbnail\n        username\n        parents {\n          id\n          name\n          slugifiedName\n          type\n          thumbnail\n        }\n      }\n      versions {\n        id\n        name\n        current\n        createdAt\n        versionStatus\n      }\n      version {\n        endpoints(pagingArgs: { limit: 3 }) @include(if: $withEndpoints) {\n          ...EndpointInfo\n        }\n      }\n      billingPlans {\n        ...BillingPlanInfo\n      }\n      billingItems {\n        id\n        name\n        description\n        type\n        allEndpoints\n      }\n      billingFeatures {\n        id\n        name\n        description\n        type\n      }\n      rating {\n        rating\n        votes\n        bestRating\n      }\n      activeUserRating {\n        rating\n      }\n      documentation {\n        readme {\n          text\n        }\n      }\n      termsOfService {\n        id\n        text\n        name\n      }\n      subscriptionsCount\n      websiteUrl\n      spotlights {\n        apiId\n        thumbnailURL\n        title\n        type\n        weight\n        description\n        id\n        published\n        spotlightURL\n        status\n        slugifiedName\n      }\n    }\n  }\n  ","\n  ","\n  ","\n"]);return nb=function(){return n},n}function n_(){let n=(0,i._)(["\n  query getApisByIds($ids: [ID]!) {\n    items: collectionsItemsByIds(ids: $ids) {\n      ... on CollectionSpotlight {\n        ...CollectionSpotlightInfo\n      }\n      ...ApiInfo\n    }\n  }\n  ","\n  ","\n"]);return n_=function(){return n},n}function nT(){let n=(0,i._)(["\n  mutation rateApi($productId: String!, $rating: Int!) {\n    rateApi(input: { apiId: $productId, rating: $rating })\n  }\n"]);return nT=function(){return n},n}function nB(){let n=(0,i._)(["\n  query searchApis(\n    $searchApiWhereInput: SearchApiWhereInput!\n    $paginationInput: PaginationInput\n    $searchApiOrderByInput: SearchApiOrderByInput\n  ) {\n    products: searchApis(\n      where: $searchApiWhereInput\n      pagination: $paginationInput\n      orderBy: $searchApiOrderByInput\n    ) {\n      nodes {\n        id\n        thumbnail\n        name\n        description\n        slugifiedName\n        pricing\n        updatedAt\n        categoryName\n        isSavedApi\n        title\n        visibility\n        category: categoryName\n        apiCategory {\n          name\n          color\n        }\n        score {\n          popularityScore\n          avgLatency\n          avgServiceLevel\n          avgSuccessRate\n        }\n        version {\n          tags {\n            id\n            status\n            tagdefinition\n            type\n            value\n          }\n        }\n        user: User {\n          id\n          username\n          slugifiedName: username\n          name\n          type\n          parents {\n            id\n            name\n            slugifiedName\n            type\n            thumbnail\n          }\n        }\n      }\n      facets {\n        category {\n          key\n          count\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n        hasPreviousPage\n        startCursor\n      }\n      total\n      queryID\n      replicaIndex\n    }\n  }\n"]);return nB=function(){return n},n}function nZ(){let n=(0,i._)(["\n  query asyncApiConfigurations($where: AsyncApiConfigurationWhereInput!) {\n    asyncApiConfigurations(where: $where) {\n      nodes {\n        spec\n      }\n    }\n  }\n"]);return nZ=function(){return n},n}function nE(){let n=(0,i._)(["\n  mutation createApiFollowers($input: ApiFollowerCreateInput!) {\n    createApiFollowers(apiFollowers: $input) {\n      followerId\n    }\n  }\n"]);return nE=function(){return n},n}function nU(){let n=(0,i._)(["\n  mutation createApiSpotlight($spotlight: SpotlightCreateInput!) {\n    createSpotlight(spotlight: $spotlight) {\n      id\n    }\n  }\n"]);return nU=function(){return n},n}function nD(){let n=(0,i._)(["\n  mutation deleteApiFollowers($input: ApiFollowerDeleteInput!) {\n    deleteApiFollowers(apiFollowers: $input)\n  }\n"]);return nD=function(){return n},n}function nN(){let n=(0,i._)(["\n  mutation deleteSpotlight($id: ID!, $apiId: ID!) {\n    deleteSpotlight(spotlight: { id: $id, apiId: $apiId })\n  }\n"]);return nN=function(){return n},n}function nO(){let n=(0,i._)(["\n  query getAllApisForContext($where: ApiWhereInput!) {\n    apis(where: $where) {\n      nodes {\n        id\n      }\n    }\n  }\n"]);return nO=function(){return n},n}function nV(){let n=(0,i._)(["\n  query getApiHealthCheck($apiId: String!) {\n    healthcheckAnalytics(apiId: $apiId) {\n      total\n      failed\n      successful\n    }\n  }\n"]);return nV=function(){return n},n}function nM(){let n=(0,i._)(["\n  mutation messageProvider($input: MessageCreateInput!) {\n    postMessage(message: $input)\n  }\n"]);return nM=function(){return n},n}function nk(){let n=(0,i._)(["\n  mutation updateApiSpotlight($spotlight: SpotlightUpdateInput!) {\n    updateSpotlight(spotlight: $spotlight) {\n      id\n    }\n  }\n"]);return nk=function(){return n},n}function nL(){let n=(0,i._)(["\n  query getAuditByOwnerId(\n    $where: AuditsWhereInput\n    $orderBy: AuditsOrderByInput\n    $pagination: PaginationInput\n  ) {\n    audits(where: $where, orderBy: $orderBy, pagination: $pagination) {\n      edges {\n        ...AuditEdgeFields\n      }\n      nodes {\n        ...AuditNodeFields\n      }\n      totalCount\n      pageInfo {\n        ...PageInfoFields\n      }\n    }\n  }\n  ","\n  ","\n  ","\n"]);return nL=function(){return n},n}function nF(){let n=(0,i._)(["\n  query getApiSubscriber($apiId: ID!, $entityId: ID!) {\n    subscriber: entityById(id: $entityId) {\n      id\n      type\n      subscription: activeSubscriptionByApiId(apiId: $apiId) {\n        id\n        userId\n        type\n        status\n        additionalSubscriptionData {\n          latestInvoiceId\n        }\n        billingPlanVersion {\n          ...BillingPlanVersionInfo\n        }\n        relatedActiveSubscriptions {\n          id\n        }\n      }\n      parents {\n        id\n        type\n        subscriptions {\n          id\n          userId\n          type\n          apiId\n          billingPlanVersion {\n            ...BillingPlanVersionInfo\n          }\n        }\n      }\n    }\n  }\n  ","\n"]);return nF=function(){return n},n}function nz(){let n=(0,i._)(["\n  mutation createApiSubscription($input: CreateApiSubscriptionInput!) {\n    createApiSubscription(input: $input) {\n      subscriptionId\n      clientSecret\n      paymentStatus\n    }\n  }\n"]);return nz=function(){return n},n}function nW(){let n=(0,i._)(["\n  mutation deleteApiSubscription($input: DeleteApiSubscriptionInput!) {\n    deleteApiSubscription(input: $input) {\n      subscriptionId\n    }\n  }\n"]);return nW=function(){return n},n}function nx(){let n=(0,i._)(["\n  mutation createRapidReason($rapidReasonInput: RapidReasonInput) {\n    createRapidReason(rapidReasonInput: $rapidReasonInput)\n  }\n"]);return nx=function(){return n},n}function nj(){let n=(0,i._)(["\n  query getActiveEntityApiSubscriptions($statuses: [String!]) {\n    activeEntity {\n      id\n      subscriptions(getAllSubscriptions: true, statuses: $statuses) {\n        id\n        status\n        billingPlanVersion {\n          id\n          name\n          current\n          status\n          period\n          price\n          pricing\n          billinglimits {\n            item\n            period\n            amount\n            limitType\n            unlimited\n            billingitem {\n              name\n            }\n          }\n          billingPlan {\n            name\n            id\n          }\n        }\n        usages {\n          mostUsagePercentage\n          topPercentageLimitedUsage\n          pricing\n          usageByBillingItem {\n            id\n            name\n            quota\n            usage\n            period\n            usagePercentages\n            billingCycleStart\n          }\n        }\n        userId\n        parentId\n        stripeId\n        isInternal\n        billingPlanVersionId\n        apiId\n        apiVersionId\n        createdAt\n        api {\n          title\n          name\n          owner {\n            id\n            slugifiedName\n          }\n          slugifiedName\n        }\n        apiVersion {\n          name\n          thumbnail\n        }\n        additionalSubscriptionData {\n          latestInvoiceId\n        }\n        relatedActiveSubscriptions {\n          id\n        }\n      }\n    }\n  }\n"]);return nj=function(){return n},n}function nG(){let n=(0,i._)(["\n  query getApiBillingItemEndpoints($apiId: ID!) {\n    api(id: $apiId) {\n      billingItems {\n        id\n        billingItemEndpoints: billingitemendpoints {\n          id\n          apiEndpoint {\n            ...BillingItemApiEndpointFields\n          }\n        }\n      }\n    }\n  }\n  ","\n"]);return nG=function(){return n},n}function nH(){let n=(0,i._)(["\n  query getApiSubscription($id: Int) {\n    subscription(id: $id) {\n      id\n      status\n    }\n  }\n"]);return nH=function(){return n},n}function nQ(){let n=(0,i._)(["\n  query getConnectedAccount {\n    paymentProviderCustomer {\n      id\n      connectedAccount {\n        ...ConnectedAccountInfo\n      }\n    }\n  }\n  ","\n"]);return nQ=function(){return n},n}function nK(){let n=(0,i._)(["\n  mutation createConnectedAccount($params: CreateConnectedAccountInput!) {\n    createConnectedAccount(params: $params) {\n      ...ConnectedAccountInfo\n    }\n  }\n  ","\n"]);return nK=function(){return n},n}function nY(){let n=(0,i._)(["\n  mutation createConnectedAccountLink($params: CreateConnectedAccountLinkInput!) {\n    createConnectedAccountLink(params: $params) {\n      created\n      expires_at\n      url\n    }\n  }\n"]);return nY=function(){return n},n}function nJ(){let n=(0,i._)(["\n  mutation createConnectedAccountDashboardLink($stripeAccountId: String!) {\n    createConnectedAccountDashboardLink(stripeAccountId: $stripeAccountId) {\n      created\n      url\n    }\n  }\n"]);return nJ=function(){return n},n}function nX(){let n=(0,i._)(["\n  mutation attachPaymentMethod($attachPaymentMethodInput: AttachPaymentMethodInput!) {\n    attachPaymentMethod(attachPaymentMethodInput: $attachPaymentMethodInput) {\n      id\n      paymentStatus\n      clientSecret\n      success\n    }\n  }\n"]);return nX=function(){return n},n}function n0(){let n=(0,i._)(["\n  mutation createSetupPaymentMethod {\n    createSetupPaymentMethod {\n      paymentMethodSetupIntentId\n      clientSecret\n    }\n  }\n"]);return n0=function(){return n},n}function n2(){let n=(0,i._)(["\n  mutation deletePaymentMethod($paymentMethodId: String!) {\n    deletePaymentMethod(paymentMethodId: $paymentMethodId)\n  }\n"]);return n2=function(){return n},n}function n3(){let n=(0,i._)(["\n  mutation deleteUnverifiedPaymentMethod($paymentMethodId: String!) {\n    deleteUnverifiedPaymentMethod(paymentMethodId: $paymentMethodId)\n  }\n"]);return n3=function(){return n},n}function n6(){let n=(0,i._)(["\n  query getInvoice($input: GetInvoiceInput!) {\n    getInvoice(input: $input) {\n      id\n      total\n      status\n      subTotal\n      amountDue\n      lines {\n        ...InvoiceLineItemInfo\n      }\n    }\n  }\n  ","\n"]);return n6=function(){return n},n}function n9(){let n=(0,i._)(["\n  query getPaymentProviderCustomer {\n    paymentProviderCustomer {\n      id\n      paymentMethods {\n        ...PaymentMethodInfo\n      }\n      unverifiedPaymentMethods {\n        ...UnverifiedPaymentMethodInfo\n      }\n      billingDetails {\n        ...BillingDetailsInfo\n      }\n    }\n  }\n  ","\n  ","\n  ","\n"]);return n9=function(){return n},n}function n1(){let n=(0,i._)(["\n  query getPaymentProviderPaymentMethod($paymentMethodId: String!) {\n    paymentProviderPaymentMethod(paymentMethodId: $paymentMethodId) {\n      id\n      type\n      card {\n        ...MinimalCardInfo\n      }\n      usBankAccount {\n        ...UsBankAccountInfo\n      }\n    }\n  }\n  ","\n  ","\n"]);return n1=function(){return n},n}function n7(){let n=(0,i._)(["\n  mutation payInvoice($input: PayInvoiceInput!) {\n    payInvoice(input: $input) {\n      lastPaymentError\n      clientSecret\n      paymentStatus\n    }\n  }\n"]);return n7=function(){return n},n}function n4(){let n=(0,i._)(["\n  mutation updateBillingDetails($updateBillingDetailsInput: UpdateBillingDetailsInput!) {\n    updateBillingDetails(updateBillingDetailsInput: $updateBillingDetailsInput) {\n      ...BillingDetailsInfo\n    }\n  }\n  ","\n"]);return n4=function(){return n},n}function n5(){let n=(0,i._)(["\n  mutation updateDefaultPaymentMethod($paymentMethodId: String!) {\n    updateDefaultPaymentMethod(paymentMethodId: $paymentMethodId)\n  }\n"]);return n5=function(){return n},n}function n8(){let n=(0,i._)(["\n  query getCategories(\n    $where: CategoryWhereInput\n    $orderBy: CategoryOrderByInput\n    $pagination: PaginationInput\n  ) {\n    categoriesV2(where: $where, orderBy: $orderBy, pagination: $pagination) {\n      nodes {\n        id\n        name\n        weight\n        slugifiedName\n        thumbnail\n        shortDescription\n      }\n    }\n  }\n"]);return n8=function(){return n},n}function en(){let n=(0,i._)(["\n  query getCategoriesByCtx($limit: Int) {\n    categoriesByCtx(limit: $limit) {\n      id\n      name\n      weight\n      thumbnail\n      shortDescription\n      slugifiedName\n      color\n    }\n  }\n"]);return en=function(){return n},n}function ee(){let n=(0,i._)(['\n  query GetTopCategories($limit: Int) {\n    categories: categoryEntities(\n      lang: "en"\n      pagingArgs: {\n        limit: $limit\n        offset: 0\n        orderBy: "weight"\n        orderDirection: asc\n        searchTerm: ""\n      }\n    ) {\n      name\n      slugifiedName\n      type\n    }\n  }\n']);return ee=function(){return n},n}function et(){let n=(0,i._)(["\n  query getCollectionBySlug($slug: String!) {\n    collection: collectionBySlugifiedKeyV3(slugifiedKey: $slug) {\n      id\n      title\n      thumbnail\n      shortDescription\n      longDescription\n      slugifiedKey\n      collectionType: collection_type\n      post {\n        id\n        link\n        title\n        thumbnail\n        image\n      }\n      apis(apisSkip: 0) {\n        ... on Api {\n          name\n          id\n        }\n        ... on CollectionSpotlight {\n          ...CollectionSpotlightInfo\n        }\n      }\n    }\n  }\n  ","\n"]);return et=function(){return n},n}function er(){let n=(0,i._)(["\n  query collectionBySlugifiedKeyV3($slugifiedKey: String, $apisSkip: Int, $apisLimit: Int) {\n    collectionBySlugifiedKeyV3(slugifiedKey: $slugifiedKey) {\n      title\n      shortDescription\n      longDescription\n      thumbnail\n      apis(apisLimit: $apisLimit, apisSkip: $apisSkip) {\n        ... on Api {\n          id\n          name\n          slugifiedName\n          description\n          isFavorite\n          pricing\n          thumbnail\n          thumbnailSmall\n          visibility\n          quality {\n            score\n          }\n          tags {\n            status\n            value\n            tagdefinition\n          }\n          rating {\n            votes\n            rating\n            bestRating\n          }\n          termsOfService {\n            name\n            text\n          }\n          score {\n            avgLatency\n            avgSuccessRate\n            avgServiceLevel\n            popularityScore\n          }\n          owner {\n            name\n            slugifiedName\n            username\n            thumbnail\n          }\n        }\n        ... on CollectionSpotlight {\n          ...CollectionSpotlightInfo\n        }\n      }\n    }\n  }\n  ","\n"]);return er=function(){return n},n}function ei(){let n=(0,i._)(["\n  query collections(\n    $where: CollectionsWhereInput\n    $orderBy: CollectionsOrderByInput\n    $minWeightToFetchApis: Int\n  ) {\n    collections(where: $where, orderBy: $orderBy, minWeightToFetchApis: $minWeightToFetchApis) {\n      data {\n        id\n        title\n        shortDescription\n        longDescription\n        thumbnail\n        slugifiedName\n      }\n      total\n    }\n  }\n"]);return ei=function(){return n},n}function ea(){let n=(0,i._)(['\n  query GetCollectionsCollapsed($page: Int, $limit: Int) {\n    collections: collapsedCollections(\n      orderByField: "weight"\n      orderDirection: asc\n      page: $page\n      limit: $limit\n    ) {\n      id\n      title\n      slugifiedKey\n      weight\n      thumbnail\n      shortDescription\n      items: detailedApisAndSpotlights(limit: $limit) {\n        ...CollectionSpotlightInfo\n        ...ApiInfo\n      }\n    }\n  }\n  ',"\n  ","\n"]);return ea=function(){return n},n}function eu(){let n=(0,i._)(["\n  mutation deleteCommentV2($input: CommentDeleteInput) {\n    deleteCommentV2(input: $input)\n  }\n"]);return eu=function(){return n},n}function eo(){let n=(0,i._)(["\n  mutation postCommentV3($input: CommentCreateInput) {\n    postCommentV3(input: $input) {\n      body\n      rating\n      createdAt\n      updatedAt\n      isAnswer\n      user {\n        username\n        thumbnail\n      }\n    }\n  }\n"]);return eo=function(){return n},n}function es(){let n=(0,i._)(["\n  mutation updateCommentV2($input: CommentUpdateInput) {\n    updateCommentV2(input: $input)\n  }\n"]);return es=function(){return n},n}function el(){let n=(0,i._)(["\n  query getEntityProfile($where: EntityWhereInput, $publishedApisWhere: PublishedApisWhereInput) {\n    entity(where: $where) {\n      thumbnail\n      id\n      name\n      username\n      email\n      slugifiedName\n      type\n      description\n      bio\n      parents {\n        id\n        name\n        slugifiedName\n        type\n        thumbnail\n      }\n      publishedApisList(where: $publishedApisWhere) {\n        ...ApiInfo\n      }\n      followedApis {\n        api {\n          ...ApiInfo\n        }\n      }\n      attributes {\n        rows {\n          attributeName\n          attributeValue\n        }\n      }\n      metadataAttributes {\n        nodes {\n          entityId\n          attributeName\n          attributeValue\n        }\n      }\n    }\n  }\n  ","\n"]);return el=function(){return n},n}function ec(){let n=(0,i._)(["\n  mutation updateEntityProfileByType(\n    $input: UpdateUserProfileByTypeInput!\n    $entityMetadataInput: EntityMetadataInput!\n  ) {\n    updateUserProfileByType(input: $input)\n    updateEntityMetadata(entityMetadata: $entityMetadataInput)\n  }\n"]);return ec=function(){return n},n}function ep(){let n=(0,i._)(["\n  query getApiExtensions($client: String, $page: String, $path: String) {\n    extensions(client: $client, page: $page, path: $path) {\n      topic\n      slugifiedKey\n      title\n      url\n      order\n      loggedInRequired\n      path\n      openInNewTab\n    }\n  }\n"]);return ep=function(){return n},n}function ed(){let n=(0,i._)(["\n  query GetGateways {\n    getGateways {\n      ...Gateway\n    }\n  }\n  ","\n"]);return ed=function(){return n},n}function em(){let n=(0,i._)(["\n  mutation deleteIssueV2($input: IssueDeleteInput) {\n    deleteIssueV2(input: $input)\n  }\n"]);return em=function(){return n},n}function ef(){let n=(0,i._)(["\n  query getIssueByIdV2($issueId: Int) {\n    getIssueByIdV2(issueId: $issueId) {\n      id\n      createdAt\n      updatedAt\n      title\n      status\n      rating\n      closed\n      body\n      commentsCount\n      isAnswered\n      comments {\n        isAnswer\n        id\n        top\n        body\n        status\n        rating\n        createdAt\n        user {\n          id\n          thumbnail\n          username\n        }\n      }\n      user {\n        id\n        username\n        thumbnail\n      }\n    }\n  }\n"]);return ef=function(){return n},n}function eg(){let n=(0,i._)(["\n  query getIssuesByApiIdV2($apiId: String!, $pagingArgs: PagingArgs, $providerId: String) {\n    getIssuesByApiIdV2(apiId: $apiId, pagingArgs: $pagingArgs, providerId: $providerId) {\n      data {\n        createdAt\n        updatedAt\n        title\n        status\n        rating\n        closed\n        body\n        commentsCount\n        comments {\n          top\n          body\n          status\n          rating\n          createdAt\n          user {\n            thumbnail\n            username\n          }\n        }\n        user {\n          username\n          thumbnail\n        }\n      }\n      total\n    }\n  }\n"]);return eg=function(){return n},n}function ey(){let n=(0,i._)(["\n  query getIssuesByApiIdsV2(\n    $apiIds: [String!]\n    $pagingArgs: PagingArgs\n    $filters: DiscussionsFilter\n  ) {\n    getIssuesByApiIdsV2(apiIds: $apiIds, pagingArgs: $pagingArgs, filters: $filters) {\n      data {\n        id\n        createdAt\n        updatedAt\n        title\n        status\n        rating\n        closed\n        body\n        commentsCount\n        isAnswered\n        comments {\n          top\n          body\n          status\n          rating\n          createdAt\n          isAnswer\n          user {\n            id\n            thumbnail\n            username\n          }\n        }\n        user {\n          id\n          username\n          thumbnail\n        }\n      }\n      total\n    }\n  }\n"]);return ey=function(){return n},n}function eh(){let n=(0,i._)(["\n  mutation postIssueV3($input: IssueCreateInputV2) {\n    postIssueV3(input: $input)\n  }\n"]);return eh=function(){return n},n}function eI(){let n=(0,i._)(["\n  mutation updateIssueV2($input: IssueUpdateInput) {\n    updateIssueV2(input: $input)\n  }\n"]);return eI=function(){return n},n}function eA(){let n=(0,i._)(["\n  query getHubMetrics($where: MetricsInput!) {\n    publicMetrics(where: $where) {\n      publicApis(where: $where) {\n        totalValue\n      }\n      users(where: $where) {\n        totalValue\n        currentPeriodValue\n        previousPeriodValue\n      }\n      activeApiConsumers(where: $where) {\n        totalValue\n        currentPeriodValue\n        previousPeriodValue\n      }\n      totalApiTraffic(where: $where) {\n        totalValue\n        currentPeriodValue\n        previousPeriodValue\n      }\n    }\n  }\n"]);return eA=function(){return n},n}function ev(){let n=(0,i._)(["\n  query getNotifications($userId: Int, $limit: Int, $offset: Int) {\n    newNotificationsByUserId(userId: $userId, limit: $limit, offset: $offset) {\n      ...notification\n      __typename\n    }\n  }\n  ","\n"]);return ev=function(){return n},n}function ew(){let n=(0,i._)(["\n  mutation markNewNotificationAsRead($input: MarkNewNotificationsAsReadInput) {\n    markNewNotificationAsRead(input: $input)\n  }\n"]);return ew=function(){return n},n}function eP(){let n=(0,i._)(["\n  mutation CreateOrganization($input: OrganizationCreateInput!) {\n    createOrganization(input: $input) {\n      id\n    }\n  }\n"]);return eP=function(){return n},n}function e$(){let n=(0,i._)(["\n  mutation deleteOrganization($id: ID!) {\n    deleteOrganization(id: $id)\n  }\n"]);return e$=function(){return n},n}function eq(){let n=(0,i._)(["\n  mutation duplicateNameCheck($input: DuplicateNameCheckInput) {\n    duplicateNameCheck(input: $input)\n  }\n"]);return eq=function(){return n},n}function eS(){let n=(0,i._)(["\n  mutation CreateApplicationAuthorization($input: AppAuthorizationCreateInput!) {\n    createApplicationAuthorization(input: $input) {\n      id\n    }\n  }\n"]);return eS=function(){return n},n}function eC(){let n=(0,i._)(["\n  query applicationAuthorizations($where: AppAuthorizationsWhereInput!) {\n    applicationAuthorizations(where: $where) {\n      ...ApplicationAuthorization\n    }\n  }\n  ","\n"]);return eC=function(){return n},n}function eR(){let n=(0,i._)(["\n  mutation createProject($project: ProjectCreateInput!) {\n    createProject(project: $project) {\n      id\n      name\n      thumbnail\n    }\n  }\n"]);return eR=function(){return n},n}function eb(){let n=(0,i._)(["\n  mutation deleteAuthorization($id: ID!) {\n    deleteApplicationAuthorization(id: $id)\n  }\n"]);return eb=function(){return n},n}function e_(){let n=(0,i._)(["\n  mutation deleteProject($input: DeleteProjectInput!) {\n    deleteProject(input: $input)\n  }\n"]);return e_=function(){return n},n}function eT(){let n=(0,i._)(["\n  query fetchEntityProjects {\n    activeEntity {\n      id\n      projectAcls {\n        owner\n        Project {\n          ...Project\n        }\n      }\n    }\n  }\n  ","\n"]);return eT=function(){return n},n}function eB(){let n=(0,i._)(["\n  query getOrgTeamsForApps($orgId: Int, $slugifiedName: String) {\n    teams(where: { orgId: $orgId, slugifiedName: $slugifiedName }) {\n      id\n      name\n    }\n  }\n"]);return eB=function(){return n},n}function eZ(){let n=(0,i._)(["\n  mutation updateApplicationAuthorization($input: AppAuthorizationUpdateInput!) {\n    updateApplicationAuthorization(input: $input) {\n      id\n    }\n  }\n"]);return eZ=function(){return n},n}function eE(){let n=(0,i._)(["\n  mutation updateProject($project: ProjectUpdateInput!) {\n    updateProject(project: $project) {\n      id\n      name\n      thumbnail\n    }\n  }\n"]);return eE=function(){return n},n}function eU(){let n=(0,i._)(["\n  query entitiesRoles($where: EntityRoleWhereInput!) {\n    entitiesRoles(where: $where) {\n      nodes {\n        id\n        orgId\n        roleId\n        parentId\n        entityId\n      }\n    }\n  }\n"]);return eU=function(){return n},n}function eD(){let n=(0,i._)(["\n  query roles($where: RoleWhereInput!) {\n    roles(where: $where) {\n      nodes {\n        ...role\n      }\n    }\n  }\n  ","\n"]);return eD=function(){return n},n}function eN(){let n=(0,i._)(["\n  mutation upsertEntityRoles($input: EntityRoleInput) {\n    upsertEntityRole(input: $input)\n  }\n"]);return eN=function(){return n},n}function eO(){let n=(0,i._)(["\n  query getUserCertificates($providerId: ID!) {\n    certs: apiCertificates(where: { ownerId: [$providerId] }) {\n      nodes {\n        ...CertificateInfo\n      }\n    }\n  }\n  ","\n"]);return eO=function(){return n},n}function eV(){let n=(0,i._)(["\n  mutation deleteCertificates($ids: [ID]!) {\n    deleteApiCertificates(ids: $ids)\n  }\n"]);return eV=function(){return n},n}function eM(){let n=(0,i._)(["\n  mutation createCertificate($alias: String!, $certificateFile: Upload!) {\n    createApiCertificates(certificates: [{ alias: $alias, certificateFile: $certificateFile }]) {\n      isExpired\n      apiCertificate {\n        ...CertificateInfo\n      }\n    }\n  }\n  ","\n"]);return eM=function(){return n},n}function ek(){let n=(0,i._)(["\n  query getSeoData($where: SEOWhereInput) {\n    getSeoData(where: $where) {\n      ...seoData\n    }\n  }\n  ","\n"]);return ek=function(){return n},n}function eL(){let n=(0,i._)(["\n  mutation updateUserEmail($email: String!) {\n    updateUserEmail(email: $email)\n  }\n"]);return eL=function(){return n},n}function eF(){let n=(0,i._)(["\n  mutation updateUserPassword($input: UserPasswordInput) {\n    updateUserPassword(input: $input)\n  }\n"]);return eF=function(){return n},n}function ez(){let n=(0,i._)(["\n  mutation verifyEmailCode($input: VerifyEmailCodeInput) {\n    verifyEmailCode(input: $input)\n  }\n"]);return ez=function(){return n},n}function eW(){let n=(0,i._)(["\n  query getTagsList {\n    tagDefinitions: getTagsList {\n      id\n      color\n      description\n      status\n      type\n      name\n      values\n      isVisible\n      showTagName\n    }\n  }\n"]);return eW=function(){return n},n}function ex(){let n=(0,i._)(["\n  mutation DeleteTeam($id: ID!) {\n    deleteTeam(id: $id)\n  }\n"]);return ex=function(){return n},n}function ej(){let n=(0,i._)(["\n  mutation createTeam($input: TeamCreateInput!) {\n    createTeam(input: $input) {\n      id\n    }\n  }\n"]);return ej=function(){return n},n}function eG(){let n=(0,i._)(["\n  mutation createUserInvites($input: UserInvitesInput!) {\n    createUserInvites(input: $input)\n  }\n"]);return eG=function(){return n},n}function eH(){let n=(0,i._)(["\n  mutation deleteUserInvites($input: UserInvitesDeleteInput!) {\n    deleteUserInvites(input: $input)\n  }\n"]);return eH=function(){return n},n}function eQ(){let n=(0,i._)(["\n  query findUsersInOrganization($orgId: Int, $term: String) {\n    findUsersInOrganization(orgId: $orgId, term: $term) {\n      id\n      name\n      email\n      status\n      username\n      thumbnail\n      inviteStatus\n      teams {\n        ...userTeam\n      }\n    }\n  }\n  ","\n"]);return eQ=function(){return n},n}function eK(){let n=(0,i._)(["\n  query activeUser {\n    activeUser {\n      ...activeUser\n    }\n    tenant {\n      id\n    }\n  }\n  ","\n"]);return eK=function(){return n},n}function eY(){let n=(0,i._)(["\n  query organizations($where: OrganizationWhereInput) {\n    organizations(where: $where) {\n      ...organization\n      teams {\n        ...userTeam\n      }\n    }\n  }\n  ","\n  ","\n"]);return eY=function(){return n},n}function eJ(){let n=(0,i._)(["\n  query organization($id: ID!, $where: WhereOrgTeam) {\n    organization(id: $id, where: $where) {\n      ...organization\n      occupiedSeats\n    }\n  }\n  ","\n"]);return eJ=function(){return n},n}function eX(){let n=(0,i._)(["\n  query paginatedTeamUsersByOrganizationIdV2($orgId: Int!, $pagingArgs: PagingArgs) {\n    paginatedTeamUsersByOrganizationIdV2(orgId: $orgId, pagingArgs: $pagingArgs) {\n      data {\n        ...teamUser\n      }\n      total\n      totalActive\n    }\n  }\n  ","\n"]);return eX=function(){return n},n}function e0(){let n=(0,i._)(["\n  mutation removeTeamUserFromAllOrgTeams($email: String!, $orgId: Int!) {\n    removeTeamUserFromAllOrgTeams(email: $email, orgId: $orgId)\n  }\n"]);return e0=function(){return n},n}function e2(){let n=(0,i._)(["\n  query searchUsers($where: SearchUsersWhereInput!) {\n    searchUsersV2(where: $where) {\n      id\n      email\n      status\n      username\n      thumbnail\n    }\n  }\n"]);return e2=function(){return n},n}function e3(){let n=(0,i._)(["\n  query teams($orgId: Int, $slugifiedName: String) {\n    teams(where: { orgId: $orgId, slugifiedName: $slugifiedName }) {\n      id\n      name\n      status\n      usersCount\n      description\n      slugifiedName\n      users {\n        ...teamUser\n      }\n    }\n  }\n  ","\n"]);return e3=function(){return n},n}function e6(){let n=(0,i._)(["\n  mutation updateTeamUser($input: TeamUserUpdateInput) {\n    updateTeamUser(input: $input)\n  }\n"]);return e6=function(){return n},n}function e9(){let n=(0,i._)(["\n  query userSubscribedTenant($where: userSubscribedTenantWhereInput) {\n    userSubscribedTenant(where: $where) {\n      domain\n      createdAt\n      tenantPricingPlan {\n        displayName\n      }\n      subscription {\n        id\n        additionalSubscriptionData {\n          subscriptionTrialEnd\n        }\n        tenantQuotaUsage {\n          limit\n          total\n        }\n      }\n    }\n  }\n"]);return e9=function(){return n},n}function e1(){let n=(0,i._)(["\n  mutation CreateTutorial(\n    $id: ID!\n    $versionId: ID!\n    $title: String!\n    $content: String!\n    $published: Boolean!\n    $thumbnailURL: String\n  ) {\n    createTutorial(\n      tutorial: {\n        apiId: $id\n        apiVersion: $versionId\n        title: $title\n        content: $content\n        published: $published\n        thumbnailURL: $thumbnailURL\n      }\n    ) {\n      id\n    }\n  }\n"]);return e1=function(){return n},n}function e7(){let n=(0,i._)(["\n  mutation DeleteTutorial($id: ID!, $versionId: ID!, $slug: String!) {\n    deleteTutorial(tutorial: { apiId: $id, apiVersion: $versionId, slugifiedName: $slug })\n  }\n"]);return e7=function(){return n},n}function e4(){let n=(0,i._)(["\n  mutation UpdateTutorial(\n    $id: ID!\n    $versionId: ID!\n    $title: String\n    $content: String\n    $published: Boolean\n    $thumbnailURL: String\n    $slug: String!\n  ) {\n    updateTutorial(\n      tutorial: {\n        apiId: $id\n        apiVersion: $versionId\n        title: $title\n        content: $content\n        published: $published\n        thumbnailURL: $thumbnailURL\n        slugifiedName: $slug\n      }\n    ) {\n      id\n      slugifiedName\n    }\n  }\n"]);return e4=function(){return n},n}function e5(){let n=(0,i._)(["\n  query tutorials($id: ID!, $versionId: ID!) {\n    tutorials(where: { apiId: $id, apiVersion: $versionId }) {\n      nodes {\n        id\n        slugifiedName\n        published\n        title\n        content\n        thumbnailURL\n        publishedDate\n        readTime\n      }\n    }\n  }\n"]);return e5=function(){return n},n}function e8(){let n=(0,i._)(["\n  mutation deleteUser($id: ID!, $mashapeId: String!) {\n    deleteUser(id: $id, mashapeId: $mashapeId)\n  }\n"]);return e8=function(){return n},n}function tn(){let n=(0,i._)(["\n  query getPrivateApisJwt {\n    privateApisSearchToken: getPrivateApisJwt\n  }\n"]);return tn=function(){return n},n}function te(){let n=(0,i._)(["\n  query getUserProfile($username: String!) {\n    userProfile: userByUsername(username: $username) {\n      __typename\n      id\n      thumbnail\n      githubUsername\n      facebookUsername\n      company\n      position\n      location\n      name\n      username\n      emailPublic\n      githubUrl\n      githubUrlPublic\n      createdAt\n      bio\n      followedApis {\n        api {\n          ...ApiInfo\n        }\n      }\n      publishedApisList {\n        ...ApiInfo\n      }\n      attributes {\n        rows {\n          attributeName\n          attributeValue\n        }\n      }\n    }\n  }\n  ","\n"]);return te=function(){return n},n}function tt(){let n=(0,i._)(["\n  query getUserAttributes($userId: Int) {\n    userAttributesByUserId(userId: $userId) {\n      rows {\n        attributeName\n        attributeValue\n      }\n    }\n  }\n"]);return tt=function(){return n},n}function tr(){let n=(0,i._)(["\n  query getUserSavedApis {\n    userSavedApis: getUserSavedApis {\n      api {\n        ...ApiInfo\n      }\n    }\n  }\n  ","\n"]);return tr=function(){return n},n}function ti(){let n=(0,i._)(["\n  mutation updateUser($input: UserUpdateInput!) {\n    updateUser(input: $input) {\n      status\n    }\n  }\n"]);return ti=function(){return n},n}function ta(){let n=(0,i._)(["\n  mutation upsertUserAttributes($input: ThemeUserAttributesInput!) {\n    updateUserAttributeItem(input: $input)\n  }\n"]);return ta=function(){return n},n}function tu(){let n=(0,i._)(["\n  query checkIfEmailsAlreadyInvited($emails: [String]!, $orgId: ID!) {\n    checkIfEmailsAlreadyInvited(emails: $emails, orgId: $orgId)\n  }\n"]);return tu=function(){return n},n}function to(){let n=(0,i._)(["\n  mutation createDeactivatedUserInvites($input: UserInvitesDeactivateInput!) {\n    createDeactivatedUserInvites(input: $input)\n  }\n"]);return to=function(){return n},n}function ts(){let n=(0,i._)(["\n  mutation inviteUsersToTeams($meta: Any, $orgId: ID!, $usersToInvite: Any) {\n    inviteUsersToTeams(meta: $meta, orgId: $orgId, usersToInvite: $usersToInvite)\n  }\n"]);return ts=function(){return n},n}function tl(){let n=(0,i._)(["\n  mutation reactivateUserInvites($input: UserInvitesReactivateInput!) {\n    reactivateUserInvites(input: $input)\n  }\n"]);return tl=function(){return n},n}function tc(){let n=(0,i._)(["\n  mutation createWorkflow($options: CreateWorkflowInput) {\n    createWorkflow(options: $options)\n  }\n"]);return tc=function(){return n},n}function tp(){let n=(0,i._)(["\n  query getAllWorkflowsCount {\n    getAllWorkflowsCount {\n      adminWorkflowsCount\n      organizationsWorkflowsCount\n      myApisWorkflowsCount\n      myAppsWorkflowsCount\n    }\n  }\n"]);return tp=function(){return n},n}function td(){let n=(0,i._)(["\n  query getWorkflowsByRequestee($options: GetWorkflowsOptions, $pagingArgs: PagingArgs) {\n    getWorkflowsByRequestee(options: $options, pagingArgs: $pagingArgs) {\n      data {\n        ...Workflow\n      }\n      total\n    }\n  }\n  ","\n"]);return td=function(){return n},n}function tm(){let n=(0,i._)(["\n  query getWorkflowsByRequestor($options: GetWorkflowsOptions, $pagingArgs: PagingArgs) {\n    getWorkflowsByRequestor(options: $options, pagingArgs: $pagingArgs) {\n      data {\n        ...Workflow\n      }\n      total\n    }\n  }\n  ","\n"]);return tm=function(){return n},n}function tf(){let n=(0,i._)(["\n  mutation updateWorkflows($options: UpdateWorkflowsInput!) {\n    updateWorkflows(options: $options)\n  }\n"]);return tf=function(){return n},n}function tg(){let n=(0,i._)(['\n  query getWorkspaceData($fromDate: DateTime, $toDate: DateTime) {\n    workspaceData {\n      ownedApis {\n        apis {\n          ...ApiInfo\n        }\n        metrics(fromDate: $fromDate, toDate: $toDate) {\n          averageErrorRate\n          averageLatency\n          subscribers\n          totalApis\n          totalRequests\n          totalSales\n        }\n      }\n      subscribedApis {\n        apis {\n          ...ApiInfo\n        }\n        metrics(fromDate: $fromDate, toDate: $toDate) {\n          lastPayment {\n            totalAmount\n            createdAt\n          }\n          totalRequests\n        }\n        subscriptions(statuses: ["ACTIVE", "BLOCKED"]) {\n          status\n        }\n      }\n      invitedApis {\n        ...ApiInfo\n      }\n    }\n  }\n  ',"\n"]);return tg=function(){return n},n}let ty=(0,u.ZP)(o()),th=(0,u.ZP)(s()),tI=(0,u.ZP)(l()),tA=(0,u.ZP)(c()),tv=(0,u.ZP)(p(),th,tI,tA),tw=(0,u.ZP)(d()),tP=(0,u.ZP)(m()),t$=(0,u.ZP)(f()),tq=(0,u.ZP)(g()),tS=(0,u.ZP)(y()),tC=(0,u.ZP)(h()),tR=(0,u.ZP)(I(),tC),tb=(0,u.ZP)(A(),tR),t_=(0,u.ZP)(v()),tT=(0,u.ZP)(w()),tB=(0,u.ZP)(P(),tT),tZ=(0,u.ZP)($()),tE=(0,u.ZP)(q()),tU=(0,u.ZP)(S()),tD=(0,u.ZP)(C()),tN=(0,u.ZP)(R(),tU,tD),tO=(0,u.ZP)(b(),tD),tV=(0,u.ZP)(_()),tM=(0,u.ZP)(T()),tk=(0,u.ZP)(B()),tL=(0,u.ZP)(Z()),tF=(0,u.ZP)(E(),tL),tz=(0,u.ZP)(U()),tW=(0,u.ZP)(D()),tx=(0,u.ZP)(N()),tj=(0,u.ZP)(O()),tG=(0,u.ZP)(V()),tH=(0,u.ZP)(M(),tx,tj,tG),tQ=(0,u.ZP)(k()),tK=(0,u.ZP)(L(),tQ),tY=(0,u.ZP)(F()),tJ=(0,u.ZP)(z(),tY),tX=(0,u.ZP)(W(),tJ),t0=(0,u.ZP)(x(),tY),t2=(0,u.ZP)(j()),t3=(0,u.ZP)(G()),t6=(0,u.ZP)(H()),t9=(0,u.ZP)(Q()),t1=(0,u.ZP)(K()),t7=(0,u.ZP)(Y()),t4=(0,u.ZP)(J()),t5=(0,u.ZP)(X()),t8=(0,u.ZP)(nn()),rn=(0,u.ZP)(ne()),re=(0,u.ZP)(nt()),rt=(0,u.ZP)(nr()),rr=(0,u.ZP)(ni()),ri=(0,u.ZP)(na()),ra=(0,u.ZP)(nu()),ru=(0,u.ZP)(no()),ro=(0,u.ZP)(ns()),rs=(0,u.ZP)(nl()),rl=(0,u.ZP)(nc()),rc=(0,u.ZP)(np()),rp=(0,u.ZP)(nd()),rd=(0,u.ZP)(nm()),rm=(0,u.ZP)(nf()),rf=(0,u.ZP)(ng()),rg=(0,u.ZP)(ny()),ry=(0,u.ZP)(nh()),rh=(0,u.ZP)(nI()),rI=(0,u.ZP)(nA()),rA=(0,u.ZP)(nv()),rv=(0,u.ZP)(nw()),rw=(0,u.ZP)(nP()),rP=(0,u.ZP)(n$()),r$=(0,u.ZP)(nq(),ty),rq=(0,u.ZP)(nS(),tv),rS=(0,u.ZP)(nC(),tw,ty,th,tP,t$),rC=(0,u.ZP)(nR()),rR=(0,u.ZP)(nb(),tq,ty,tB),rb=(0,u.ZP)(n_(),tS,tq),r_=(0,u.ZP)(nT()),rT=(0,u.ZP)(nB()),rB=(0,u.ZP)(nZ()),rZ=(0,u.ZP)(nE()),rE=(0,u.ZP)(nU()),rU=(0,u.ZP)(nD()),rD=(0,u.ZP)(nN()),rN=(0,u.ZP)(nO()),rO=(0,u.ZP)(nV()),rV=(0,u.ZP)(nM()),rM=(0,u.ZP)(nk()),rk=(0,u.ZP)(nL(),tb,tR,t_),rL=(0,u.ZP)(nF(),tT),rF=(0,u.ZP)(nz()),rz=(0,u.ZP)(nW()),rW=(0,u.ZP)(nx()),rx=(0,u.ZP)(nj()),rj=(0,u.ZP)(nG(),tZ),rG=(0,u.ZP)(nH()),rH=(0,u.ZP)(nQ(),tE),rQ=(0,u.ZP)(nK(),tE),rK=(0,u.ZP)(nY()),rY=(0,u.ZP)(nJ()),rJ=(0,u.ZP)(nX()),rX=(0,u.ZP)(n0()),r0=(0,u.ZP)(n2()),r2=(0,u.ZP)(n3()),r3=(0,u.ZP)(n6(),tM),r6=(0,u.ZP)(n9(),tN,tO,tV),r9=(0,u.ZP)(n1(),tU,tD),r1=(0,u.ZP)(n7()),r7=(0,u.ZP)(n4(),tV),r4=(0,u.ZP)(n5()),r5=(0,u.ZP)(n8()),r8=(0,u.ZP)(en()),ie=(0,u.ZP)(ee()),it=(0,u.ZP)(et(),tS),ir=(0,u.ZP)(er(),tS),ii=(0,u.ZP)(ei()),ia=(0,u.ZP)(ea(),tS,tq),iu=(0,u.ZP)(eu()),io=(0,u.ZP)(eo()),is=(0,u.ZP)(es()),il=(0,u.ZP)(el(),tq),ic=(0,u.ZP)(ec()),ip=(0,u.ZP)(ep()),id=(0,u.ZP)(ed(),tL),im=(0,u.ZP)(em()),ig=(0,u.ZP)(ef()),iy=(0,u.ZP)(eg()),ih=(0,u.ZP)(ey()),iI=(0,u.ZP)(eh()),iA=(0,u.ZP)(eI()),iv=(0,u.ZP)(eA()),iw=(0,u.ZP)(ev(),tk),iP=(0,u.ZP)(ew()),i$=(0,u.ZP)(eP()),iq=(0,u.ZP)(e$()),iS=(0,u.ZP)(eq()),iC=(0,u.ZP)(eS()),iR=(0,u.ZP)(eC(),tF),ib=(0,u.ZP)(eR()),i_=(0,u.ZP)(eb()),iT=(0,u.ZP)(e_()),iB=(0,u.ZP)(eT(),tz),iZ=(0,u.ZP)(eB()),iE=(0,u.ZP)(eZ()),iU=(0,u.ZP)(eE()),iD=(0,u.ZP)(eU()),iN=(0,u.ZP)(eD(),tW),iO=(0,u.ZP)(eN()),iV=(0,u.ZP)(eO(),tH),iM=(0,u.ZP)(eV()),ik=(0,u.ZP)(eM(),tH),iL=(0,u.ZP)(ek(),tK),iF=(0,u.ZP)(eL()),iz=(0,u.ZP)(eF()),iW=(0,u.ZP)(ez()),ix=(0,u.ZP)(eW()),ij=(0,u.ZP)(ex()),iG=(0,u.ZP)(ej()),iH=(0,u.ZP)(eG()),iQ=(0,u.ZP)(eH()),iK=(0,u.ZP)(eQ(),tY),iY=(0,u.ZP)(eK(),tX),iJ=(0,u.ZP)(eY(),tJ,tY),iX=(0,u.ZP)(eJ(),tJ),i0=(0,u.ZP)(eX(),t0),i2=(0,u.ZP)(e0()),i3=(0,u.ZP)(e2()),i6=(0,u.ZP)(e3(),t0),i9=(0,u.ZP)(e6()),i1=(0,u.ZP)(e9()),i7=(0,u.ZP)(e1()),i4=(0,u.ZP)(e7()),i5=(0,u.ZP)(e4()),i8=(0,u.ZP)(e5()),an=(0,u.ZP)(e8()),ae=(0,u.ZP)(tn()),at=(0,u.ZP)(te(),tq),ar=(0,u.ZP)(tt()),ai=(0,u.ZP)(tr(),tq),aa=(0,u.ZP)(ti()),au=(0,u.ZP)(ta()),ao=(0,u.ZP)(tu()),as=(0,u.ZP)(to()),al=(0,u.ZP)(ts()),ac=(0,u.ZP)(tl()),ap=(0,u.ZP)(tc()),ad=(0,u.ZP)(tp()),am=(0,u.ZP)(td(),t2),af=(0,u.ZP)(tm(),t2),ag=(0,u.ZP)(tf()),ay=(0,u.ZP)(tg(),tq),ah=(n,e,t)=>n(),aI=(0,a.S)(t3),aA=(0,a.S)(t6),av=(0,a.S)(t9),aw=(0,a.S)(t1),aP=(0,a.S)(t7),a$=(0,a.S)(t4),aq=(0,a.S)(t5),aS=(0,a.S)(t8),aC=(0,a.S)(rn),aR=(0,a.S)(re),ab=(0,a.S)(rt),a_=(0,a.S)(rr),aT=(0,a.S)(ri),aB=(0,a.S)(ra),aZ=(0,a.S)(ru),aE=(0,a.S)(ro),aU=(0,a.S)(rs),aD=(0,a.S)(rl),aN=(0,a.S)(rc),aO=(0,a.S)(rp),aV=(0,a.S)(rd),aM=(0,a.S)(rm),ak=(0,a.S)(rf),aL=(0,a.S)(rg),aF=(0,a.S)(ry),az=(0,a.S)(rh),aW=(0,a.S)(rI),ax=(0,a.S)(rA),aj=(0,a.S)(rv),aG=(0,a.S)(rw),aH=(0,a.S)(rP),aQ=(0,a.S)(r$),aK=(0,a.S)(rq),aY=(0,a.S)(rS),aJ=(0,a.S)(rC),aX=(0,a.S)(rR),a0=(0,a.S)(rb),a2=(0,a.S)(r_),a3=(0,a.S)(rT),a6=(0,a.S)(rB),a9=(0,a.S)(rZ),a1=(0,a.S)(rE),a7=(0,a.S)(rU),a4=(0,a.S)(rD),a5=(0,a.S)(rN),a8=(0,a.S)(rO),un=(0,a.S)(rV),ue=(0,a.S)(rM),ut=(0,a.S)(rk),ur=(0,a.S)(rL),ui=(0,a.S)(rF),ua=(0,a.S)(rz),uu=(0,a.S)(rW),uo=(0,a.S)(rx),us=(0,a.S)(rj),ul=(0,a.S)(rG),uc=(0,a.S)(rH),up=(0,a.S)(rQ),ud=(0,a.S)(rK),um=(0,a.S)(rY),uf=(0,a.S)(rJ),ug=(0,a.S)(rX),uy=(0,a.S)(r0),uh=(0,a.S)(r2),uI=(0,a.S)(r3),uA=(0,a.S)(r6),uv=(0,a.S)(r9),uw=(0,a.S)(r1),uP=(0,a.S)(r7),u$=(0,a.S)(r4),uq=(0,a.S)(r5),uS=(0,a.S)(r8),uC=(0,a.S)(ie),uR=(0,a.S)(it),ub=(0,a.S)(ir),u_=(0,a.S)(ii),uT=(0,a.S)(ia),uB=(0,a.S)(iu),uZ=(0,a.S)(io),uE=(0,a.S)(is),uU=(0,a.S)(il),uD=(0,a.S)(ic),uN=(0,a.S)(ip),uO=(0,a.S)(id),uV=(0,a.S)(im),uM=(0,a.S)(ig),uk=(0,a.S)(iy),uL=(0,a.S)(ih),uF=(0,a.S)(iI),uz=(0,a.S)(iA),uW=(0,a.S)(iv),ux=(0,a.S)(iw),uj=(0,a.S)(iP),uG=(0,a.S)(i$),uH=(0,a.S)(iq),uQ=(0,a.S)(iS),uK=(0,a.S)(iC),uY=(0,a.S)(iR),uJ=(0,a.S)(ib),uX=(0,a.S)(i_),u0=(0,a.S)(iT),u2=(0,a.S)(iB),u3=(0,a.S)(iZ),u6=(0,a.S)(iE),u9=(0,a.S)(iU),u1=(0,a.S)(iD),u7=(0,a.S)(iN),u4=(0,a.S)(iO),u5=(0,a.S)(iV),u8=(0,a.S)(iM),on=(0,a.S)(ik),oe=(0,a.S)(iL),ot=(0,a.S)(iF),or=(0,a.S)(iz),oi=(0,a.S)(iW),oa=(0,a.S)(ix),ou=(0,a.S)(ij),oo=(0,a.S)(iG),os=(0,a.S)(iH),ol=(0,a.S)(iQ),oc=(0,a.S)(iK),op=(0,a.S)(iY),od=(0,a.S)(iJ),om=(0,a.S)(iX),of=(0,a.S)(i0),og=(0,a.S)(i2),oy=(0,a.S)(i3),oh=(0,a.S)(i6),oI=(0,a.S)(i9),oA=(0,a.S)(i1),ov=(0,a.S)(i7),ow=(0,a.S)(i4),oP=(0,a.S)(i5),o$=(0,a.S)(i8),oq=(0,a.S)(an),oS=(0,a.S)(ae),oC=(0,a.S)(at),oR=(0,a.S)(ar),ob=(0,a.S)(ai),o_=(0,a.S)(aa),oT=(0,a.S)(au),oB=(0,a.S)(ao),oZ=(0,a.S)(as),oE=(0,a.S)(al),oU=(0,a.S)(ac),oD=(0,a.S)(ap),oN=(0,a.S)(ad),oO=(0,a.S)(am),oV=(0,a.S)(af),oM=(0,a.S)(ag),ok=(0,a.S)(ay);function oL(n){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ah;return{apiTrafficAnalytics:(t,r)=>e(e=>n.rawRequest(aI,t,{...r,...e}),"apiTrafficAnalytics","query"),apiTrafficAnalyticsFacets:(t,r)=>e(e=>n.rawRequest(aA,t,{...r,...e}),"apiTrafficAnalyticsFacets","query"),apiTrafficAnalyticsLogs:(t,r)=>e(e=>n.rawRequest(av,t,{...r,...e}),"apiTrafficAnalyticsLogs","query"),apiTrafficAnalyticsSummary:(t,r)=>e(e=>n.rawRequest(aw,t,{...r,...e}),"apiTrafficAnalyticsSummary","query"),consumerAnalytics:(t,r)=>e(e=>n.rawRequest(aP,t,{...r,...e}),"consumerAnalytics","query"),consumerAnalyticsEngagements:(t,r)=>e(e=>n.rawRequest(a$,t,{...r,...e}),"consumerAnalyticsEngagements","query"),consumerAnalyticsFinancial:(t,r)=>e(e=>n.rawRequest(aq,t,{...r,...e}),"consumerAnalyticsFinancial","query"),consumerAnalyticsHealth:(t,r)=>e(e=>n.rawRequest(aS,t,{...r,...e}),"consumerAnalyticsHealth","query"),getRequestLogPayload:(t,r)=>e(e=>n.rawRequest(aC,t,{...r,...e}),"getRequestLogPayload","query"),providerAnalyticsEngagements:(t,r)=>e(e=>n.rawRequest(aR,t,{...r,...e}),"providerAnalyticsEngagements","query"),providerAnalyticsGrowth:(t,r)=>e(e=>n.rawRequest(ab,t,{...r,...e}),"providerAnalyticsGrowth","query"),providerAnalyticsHealth:(t,r)=>e(e=>n.rawRequest(a_,t,{...r,...e}),"providerAnalyticsHealth","query"),providerAnalyticsMetrics:(t,r)=>e(e=>n.rawRequest(aT,t,{...r,...e}),"providerAnalyticsMetrics","query"),topByConsumer:(t,r)=>e(e=>n.rawRequest(aB,t,{...r,...e}),"topByConsumer","query"),topByProvider:(t,r)=>e(e=>n.rawRequest(aZ,t,{...r,...e}),"topByProvider","query"),topApiCallsByProvider:(t,r)=>e(e=>n.rawRequest(aE,t,{...r,...e}),"topApiCallsByProvider","query"),topApiErrorRateByProvider:(t,r)=>e(e=>n.rawRequest(aU,t,{...r,...e}),"topApiErrorRateByProvider","query"),topApiAvgLatencyByProvider:(t,r)=>e(e=>n.rawRequest(aD,t,{...r,...e}),"topApiAvgLatencyByProvider","query"),topConsumersCallsByProvider:(t,r)=>e(e=>n.rawRequest(aN,t,{...r,...e}),"topConsumersCallsByProvider","query"),topConsumersErrorRateByProvider:(t,r)=>e(e=>n.rawRequest(aO,t,{...r,...e}),"topConsumersErrorRateByProvider","query"),topConsumersAvgLatencyByProvider:(t,r)=>e(e=>n.rawRequest(aV,t,{...r,...e}),"topConsumersAvgLatencyByProvider","query"),topApiCallsByConsumer:(t,r)=>e(e=>n.rawRequest(aM,t,{...r,...e}),"topApiCallsByConsumer","query"),topApiErrorRateByConsumer:(t,r)=>e(e=>n.rawRequest(ak,t,{...r,...e}),"topApiErrorRateByConsumer","query"),topApiAvgLatencyByConsumer:(t,r)=>e(e=>n.rawRequest(aL,t,{...r,...e}),"topApiAvgLatencyByConsumer","query"),topConsumersCallsByConsumer:(t,r)=>e(e=>n.rawRequest(aF,t,{...r,...e}),"topConsumersCallsByConsumer","query"),topConsumersErrorRateByConsumer:(t,r)=>e(e=>n.rawRequest(az,t,{...r,...e}),"topConsumersErrorRateByConsumer","query"),topConsumersAvgLatencyByConsumer:(t,r)=>e(e=>n.rawRequest(aW,t,{...r,...e}),"topConsumersAvgLatencyByConsumer","query"),topApiSpendByConsumer:(t,r)=>e(e=>n.rawRequest(ax,t,{...r,...e}),"topApiSpendByConsumer","query"),topConsumersSpendByConsumer:(t,r)=>e(e=>n.rawRequest(aj,t,{...r,...e}),"topConsumersSpendByConsumer","query"),topApiRevenueByProvider:(t,r)=>e(e=>n.rawRequest(aG,t,{...r,...e}),"topApiRevenueByProvider","query"),topConsumersRevenueByProvider:(t,r)=>e(e=>n.rawRequest(aH,t,{...r,...e}),"topConsumersRevenueByProvider","query"),getApiEndpoint:(t,r)=>e(e=>n.rawRequest(aQ,t,{...r,...e}),"getApiEndpoint","query"),getFullApiEndpoint:(t,r)=>e(e=>n.rawRequest(aK,t,{...r,...e}),"getFullApiEndpoint","query"),getApiVersion:(t,r)=>e(e=>n.rawRequest(aY,t,{...r,...e}),"getApiVersion","query"),favoriteApi:(t,r)=>e(e=>n.rawRequest(aJ,t,{...r,...e}),"favoriteApi","mutation"),getApiBySlugAndOwner:(t,r)=>e(e=>n.rawRequest(aX,t,{...r,...e}),"getApiBySlugAndOwner","query"),getApisByIds:(t,r)=>e(e=>n.rawRequest(a0,t,{...r,...e}),"getApisByIds","query"),rateApi:(t,r)=>e(e=>n.rawRequest(a2,t,{...r,...e}),"rateApi","mutation"),searchApis:(t,r)=>e(e=>n.rawRequest(a3,t,{...r,...e}),"searchApis","query"),asyncApiConfigurations:(t,r)=>e(e=>n.rawRequest(a6,t,{...r,...e}),"asyncApiConfigurations","query"),createApiFollowers:(t,r)=>e(e=>n.rawRequest(a9,t,{...r,...e}),"createApiFollowers","mutation"),createApiSpotlight:(t,r)=>e(e=>n.rawRequest(a1,t,{...r,...e}),"createApiSpotlight","mutation"),deleteApiFollowers:(t,r)=>e(e=>n.rawRequest(a7,t,{...r,...e}),"deleteApiFollowers","mutation"),deleteSpotlight:(t,r)=>e(e=>n.rawRequest(a4,t,{...r,...e}),"deleteSpotlight","mutation"),getAllApisForContext:(t,r)=>e(e=>n.rawRequest(a5,t,{...r,...e}),"getAllApisForContext","query"),getApiHealthCheck:(t,r)=>e(e=>n.rawRequest(a8,t,{...r,...e}),"getApiHealthCheck","query"),messageProvider:(t,r)=>e(e=>n.rawRequest(un,t,{...r,...e}),"messageProvider","mutation"),updateApiSpotlight:(t,r)=>e(e=>n.rawRequest(ue,t,{...r,...e}),"updateApiSpotlight","mutation"),getAuditByOwnerId:(t,r)=>e(e=>n.rawRequest(ut,t,{...r,...e}),"getAuditByOwnerId","query"),getApiSubscriber:(t,r)=>e(e=>n.rawRequest(ur,t,{...r,...e}),"getApiSubscriber","query"),createApiSubscription:(t,r)=>e(e=>n.rawRequest(ui,t,{...r,...e}),"createApiSubscription","mutation"),deleteApiSubscription:(t,r)=>e(e=>n.rawRequest(ua,t,{...r,...e}),"deleteApiSubscription","mutation"),createRapidReason:(t,r)=>e(e=>n.rawRequest(uu,t,{...r,...e}),"createRapidReason","mutation"),getActiveEntityApiSubscriptions:(t,r)=>e(e=>n.rawRequest(uo,t,{...r,...e}),"getActiveEntityApiSubscriptions","query"),getApiBillingItemEndpoints:(t,r)=>e(e=>n.rawRequest(us,t,{...r,...e}),"getApiBillingItemEndpoints","query"),getApiSubscription:(t,r)=>e(e=>n.rawRequest(ul,t,{...r,...e}),"getApiSubscription","query"),getConnectedAccount:(t,r)=>e(e=>n.rawRequest(uc,t,{...r,...e}),"getConnectedAccount","query"),createConnectedAccount:(t,r)=>e(e=>n.rawRequest(up,t,{...r,...e}),"createConnectedAccount","mutation"),createConnectedAccountLink:(t,r)=>e(e=>n.rawRequest(ud,t,{...r,...e}),"createConnectedAccountLink","mutation"),createConnectedAccountDashboardLink:(t,r)=>e(e=>n.rawRequest(um,t,{...r,...e}),"createConnectedAccountDashboardLink","mutation"),attachPaymentMethod:(t,r)=>e(e=>n.rawRequest(uf,t,{...r,...e}),"attachPaymentMethod","mutation"),createSetupPaymentMethod:(t,r)=>e(e=>n.rawRequest(ug,t,{...r,...e}),"createSetupPaymentMethod","mutation"),deletePaymentMethod:(t,r)=>e(e=>n.rawRequest(uy,t,{...r,...e}),"deletePaymentMethod","mutation"),deleteUnverifiedPaymentMethod:(t,r)=>e(e=>n.rawRequest(uh,t,{...r,...e}),"deleteUnverifiedPaymentMethod","mutation"),getInvoice:(t,r)=>e(e=>n.rawRequest(uI,t,{...r,...e}),"getInvoice","query"),getPaymentProviderCustomer:(t,r)=>e(e=>n.rawRequest(uA,t,{...r,...e}),"getPaymentProviderCustomer","query"),getPaymentProviderPaymentMethod:(t,r)=>e(e=>n.rawRequest(uv,t,{...r,...e}),"getPaymentProviderPaymentMethod","query"),payInvoice:(t,r)=>e(e=>n.rawRequest(uw,t,{...r,...e}),"payInvoice","mutation"),updateBillingDetails:(t,r)=>e(e=>n.rawRequest(uP,t,{...r,...e}),"updateBillingDetails","mutation"),updateDefaultPaymentMethod:(t,r)=>e(e=>n.rawRequest(u$,t,{...r,...e}),"updateDefaultPaymentMethod","mutation"),getCategories:(t,r)=>e(e=>n.rawRequest(uq,t,{...r,...e}),"getCategories","query"),getCategoriesByCtx:(t,r)=>e(e=>n.rawRequest(uS,t,{...r,...e}),"getCategoriesByCtx","query"),GetTopCategories:(t,r)=>e(e=>n.rawRequest(uC,t,{...r,...e}),"GetTopCategories","query"),getCollectionBySlug:(t,r)=>e(e=>n.rawRequest(uR,t,{...r,...e}),"getCollectionBySlug","query"),collectionBySlugifiedKeyV3:(t,r)=>e(e=>n.rawRequest(ub,t,{...r,...e}),"collectionBySlugifiedKeyV3","query"),collections:(t,r)=>e(e=>n.rawRequest(u_,t,{...r,...e}),"collections","query"),GetCollectionsCollapsed:(t,r)=>e(e=>n.rawRequest(uT,t,{...r,...e}),"GetCollectionsCollapsed","query"),deleteCommentV2:(t,r)=>e(e=>n.rawRequest(uB,t,{...r,...e}),"deleteCommentV2","mutation"),postCommentV3:(t,r)=>e(e=>n.rawRequest(uZ,t,{...r,...e}),"postCommentV3","mutation"),updateCommentV2:(t,r)=>e(e=>n.rawRequest(uE,t,{...r,...e}),"updateCommentV2","mutation"),getEntityProfile:(t,r)=>e(e=>n.rawRequest(uU,t,{...r,...e}),"getEntityProfile","query"),updateEntityProfileByType:(t,r)=>e(e=>n.rawRequest(uD,t,{...r,...e}),"updateEntityProfileByType","mutation"),getApiExtensions:(t,r)=>e(e=>n.rawRequest(uN,t,{...r,...e}),"getApiExtensions","query"),GetGateways:(t,r)=>e(e=>n.rawRequest(uO,t,{...r,...e}),"GetGateways","query"),deleteIssueV2:(t,r)=>e(e=>n.rawRequest(uV,t,{...r,...e}),"deleteIssueV2","mutation"),getIssueByIdV2:(t,r)=>e(e=>n.rawRequest(uM,t,{...r,...e}),"getIssueByIdV2","query"),getIssuesByApiIdV2:(t,r)=>e(e=>n.rawRequest(uk,t,{...r,...e}),"getIssuesByApiIdV2","query"),getIssuesByApiIdsV2:(t,r)=>e(e=>n.rawRequest(uL,t,{...r,...e}),"getIssuesByApiIdsV2","query"),postIssueV3:(t,r)=>e(e=>n.rawRequest(uF,t,{...r,...e}),"postIssueV3","mutation"),updateIssueV2:(t,r)=>e(e=>n.rawRequest(uz,t,{...r,...e}),"updateIssueV2","mutation"),getHubMetrics:(t,r)=>e(e=>n.rawRequest(uW,t,{...r,...e}),"getHubMetrics","query"),getNotifications:(t,r)=>e(e=>n.rawRequest(ux,t,{...r,...e}),"getNotifications","query"),markNewNotificationAsRead:(t,r)=>e(e=>n.rawRequest(uj,t,{...r,...e}),"markNewNotificationAsRead","mutation"),CreateOrganization:(t,r)=>e(e=>n.rawRequest(uG,t,{...r,...e}),"CreateOrganization","mutation"),deleteOrganization:(t,r)=>e(e=>n.rawRequest(uH,t,{...r,...e}),"deleteOrganization","mutation"),duplicateNameCheck:(t,r)=>e(e=>n.rawRequest(uQ,t,{...r,...e}),"duplicateNameCheck","mutation"),CreateApplicationAuthorization:(t,r)=>e(e=>n.rawRequest(uK,t,{...r,...e}),"CreateApplicationAuthorization","mutation"),applicationAuthorizations:(t,r)=>e(e=>n.rawRequest(uY,t,{...r,...e}),"applicationAuthorizations","query"),createProject:(t,r)=>e(e=>n.rawRequest(uJ,t,{...r,...e}),"createProject","mutation"),deleteAuthorization:(t,r)=>e(e=>n.rawRequest(uX,t,{...r,...e}),"deleteAuthorization","mutation"),deleteProject:(t,r)=>e(e=>n.rawRequest(u0,t,{...r,...e}),"deleteProject","mutation"),fetchEntityProjects:(t,r)=>e(e=>n.rawRequest(u2,t,{...r,...e}),"fetchEntityProjects","query"),getOrgTeamsForApps:(t,r)=>e(e=>n.rawRequest(u3,t,{...r,...e}),"getOrgTeamsForApps","query"),updateApplicationAuthorization:(t,r)=>e(e=>n.rawRequest(u6,t,{...r,...e}),"updateApplicationAuthorization","mutation"),updateProject:(t,r)=>e(e=>n.rawRequest(u9,t,{...r,...e}),"updateProject","mutation"),entitiesRoles:(t,r)=>e(e=>n.rawRequest(u1,t,{...r,...e}),"entitiesRoles","query"),roles:(t,r)=>e(e=>n.rawRequest(u7,t,{...r,...e}),"roles","query"),upsertEntityRoles:(t,r)=>e(e=>n.rawRequest(u4,t,{...r,...e}),"upsertEntityRoles","mutation"),getUserCertificates:(t,r)=>e(e=>n.rawRequest(u5,t,{...r,...e}),"getUserCertificates","query"),deleteCertificates:(t,r)=>e(e=>n.rawRequest(u8,t,{...r,...e}),"deleteCertificates","mutation"),createCertificate:(t,r)=>e(e=>n.rawRequest(on,t,{...r,...e}),"createCertificate","mutation"),getSeoData:(t,r)=>e(e=>n.rawRequest(oe,t,{...r,...e}),"getSeoData","query"),updateUserEmail:(t,r)=>e(e=>n.rawRequest(ot,t,{...r,...e}),"updateUserEmail","mutation"),updateUserPassword:(t,r)=>e(e=>n.rawRequest(or,t,{...r,...e}),"updateUserPassword","mutation"),verifyEmailCode:(t,r)=>e(e=>n.rawRequest(oi,t,{...r,...e}),"verifyEmailCode","mutation"),getTagsList:(t,r)=>e(e=>n.rawRequest(oa,t,{...r,...e}),"getTagsList","query"),DeleteTeam:(t,r)=>e(e=>n.rawRequest(ou,t,{...r,...e}),"DeleteTeam","mutation"),createTeam:(t,r)=>e(e=>n.rawRequest(oo,t,{...r,...e}),"createTeam","mutation"),createUserInvites:(t,r)=>e(e=>n.rawRequest(os,t,{...r,...e}),"createUserInvites","mutation"),deleteUserInvites:(t,r)=>e(e=>n.rawRequest(ol,t,{...r,...e}),"deleteUserInvites","mutation"),findUsersInOrganization:(t,r)=>e(e=>n.rawRequest(oc,t,{...r,...e}),"findUsersInOrganization","query"),activeUser:(t,r)=>e(e=>n.rawRequest(op,t,{...r,...e}),"activeUser","query"),organizations:(t,r)=>e(e=>n.rawRequest(od,t,{...r,...e}),"organizations","query"),organization:(t,r)=>e(e=>n.rawRequest(om,t,{...r,...e}),"organization","query"),paginatedTeamUsersByOrganizationIdV2:(t,r)=>e(e=>n.rawRequest(of,t,{...r,...e}),"paginatedTeamUsersByOrganizationIdV2","query"),removeTeamUserFromAllOrgTeams:(t,r)=>e(e=>n.rawRequest(og,t,{...r,...e}),"removeTeamUserFromAllOrgTeams","mutation"),searchUsers:(t,r)=>e(e=>n.rawRequest(oy,t,{...r,...e}),"searchUsers","query"),teams:(t,r)=>e(e=>n.rawRequest(oh,t,{...r,...e}),"teams","query"),updateTeamUser:(t,r)=>e(e=>n.rawRequest(oI,t,{...r,...e}),"updateTeamUser","mutation"),userSubscribedTenant:(t,r)=>e(e=>n.rawRequest(oA,t,{...r,...e}),"userSubscribedTenant","query"),CreateTutorial:(t,r)=>e(e=>n.rawRequest(ov,t,{...r,...e}),"CreateTutorial","mutation"),DeleteTutorial:(t,r)=>e(e=>n.rawRequest(ow,t,{...r,...e}),"DeleteTutorial","mutation"),UpdateTutorial:(t,r)=>e(e=>n.rawRequest(oP,t,{...r,...e}),"UpdateTutorial","mutation"),tutorials:(t,r)=>e(e=>n.rawRequest(o$,t,{...r,...e}),"tutorials","query"),deleteUser:(t,r)=>e(e=>n.rawRequest(oq,t,{...r,...e}),"deleteUser","mutation"),getPrivateApisJwt:(t,r)=>e(e=>n.rawRequest(oS,t,{...r,...e}),"getPrivateApisJwt","query"),getUserProfile:(t,r)=>e(e=>n.rawRequest(oC,t,{...r,...e}),"getUserProfile","query"),getUserAttributes:(t,r)=>e(e=>n.rawRequest(oR,t,{...r,...e}),"getUserAttributes","query"),getUserSavedApis:(t,r)=>e(e=>n.rawRequest(ob,t,{...r,...e}),"getUserSavedApis","query"),updateUser:(t,r)=>e(e=>n.rawRequest(o_,t,{...r,...e}),"updateUser","mutation"),upsertUserAttributes:(t,r)=>e(e=>n.rawRequest(oT,t,{...r,...e}),"upsertUserAttributes","mutation"),checkIfEmailsAlreadyInvited:(t,r)=>e(e=>n.rawRequest(oB,t,{...r,...e}),"checkIfEmailsAlreadyInvited","query"),createDeactivatedUserInvites:(t,r)=>e(e=>n.rawRequest(oZ,t,{...r,...e}),"createDeactivatedUserInvites","mutation"),inviteUsersToTeams:(t,r)=>e(e=>n.rawRequest(oE,t,{...r,...e}),"inviteUsersToTeams","mutation"),reactivateUserInvites:(t,r)=>e(e=>n.rawRequest(oU,t,{...r,...e}),"reactivateUserInvites","mutation"),createWorkflow:(t,r)=>e(e=>n.rawRequest(oD,t,{...r,...e}),"createWorkflow","mutation"),getAllWorkflowsCount:(t,r)=>e(e=>n.rawRequest(oN,t,{...r,...e}),"getAllWorkflowsCount","query"),getWorkflowsByRequestee:(t,r)=>e(e=>n.rawRequest(oO,t,{...r,...e}),"getWorkflowsByRequestee","query"),getWorkflowsByRequestor:(t,r)=>e(e=>n.rawRequest(oV,t,{...r,...e}),"getWorkflowsByRequestor","query"),updateWorkflows:(t,r)=>e(e=>n.rawRequest(oM,t,{...r,...e}),"updateWorkflows","mutation"),getWorkspaceData:(t,r)=>e(e=>n.rawRequest(ok,t,{...r,...e}),"getWorkspaceData","query")}}var oF=t(31077),oz=t(2265),oW=t(60579),ox=t(236),oj=t(25566);let oG=async(n,e,t)=>{let r=Date.now(),i=await n(),a=Date.now();return oW.k.info("request duration: ".concat(t," ").concat(e," took ").concat(a-r," ms")),i},oH=(n,e)=>{let t=new oF.g6("".concat(null!=e?e:oj.env.FEDERATION_SERVICE,"/graphql"),{fetch:(0,oz.cache)(async(n,e)=>fetch(n,{...e,next:{revalidate:6e3}})),requestMiddleware:n,responseMiddleware:n=>(0,ox.j)(n)});return r=oj.env.REQUESTS_TIME_ANALYZE?oL(t,oG):oL(t)},oQ=()=>r},236:function(n,e,t){t.d(e,{j:function(){return s},q:function(){return l}});var r=t(31077),i=t(44750),a=t.n(i),u=t(60579),o=t(23600);let s=n=>{var e;if(419===a()(n,"response.status",a()(n,"response.errors[0].extensions.response.status")))return u.k.warn("Graphql call response status=419. Redirecting to auth."),o.P.nextRedirect("/auth?referral=hub");let t=null!==(e=a()(n,"errors"))&&void 0!==e?e:a()(n,"response.errors");return t?u.k.error("GraphQl error. ".concat(JSON.stringify(t))):n instanceof r.XF?u.k.error("GraphQl ClientError.",n.response):n instanceof Error?u.k.error("GraphQl call failed.",n):void 0},l=n=>{if(419===n.status)return u.k.warn("Rest call response status=419. Redirecting to auth."),o.P.nextRedirect("/auth");u.k.error("Rest error.",n.body)}}}]);
//# sourceMappingURL=2064-9c4786eec4cdf607.js.map